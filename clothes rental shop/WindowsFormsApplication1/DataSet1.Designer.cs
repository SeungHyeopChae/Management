//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.42000
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace WindowsFormsApplication1 {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSet1")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSet1 : global::System.Data.DataSet {
        
        private HUMANDataTable tableHUMAN;
        
        private BLACKLISTDataTable tableBLACKLIST;
        
        private CATEGORYDataTable tableCATEGORY;
        
        private CLOTHESDataTable tableCLOTHES;
        
        private CUSTOMERDataTable tableCUSTOMER;
        
        private MANAGERDataTable tableMANAGER;
        
        private PAYDataTable tablePAY;
        
        private STAFFDataTable tableSTAFF;
        
        private RENTALDataTable tableRENTAL;
        
        private RESERVATIONDataTable tableRESERVATION;
        
        private REVIEWDataTable tableREVIEW;
        
        private DataTable1DataTable tableDataTable1;
        
        private DataTable2DataTable tableDataTable2;
        
        private LATEFEEDataTable tableLATEFEE;
        
        private global::System.Data.DataRelation relationBLACKLIST_FK1;
        
        private global::System.Data.DataRelation relationCLOTHES_FK1;
        
        private global::System.Data.DataRelation relationCLOTHES_FK2;
        
        private global::System.Data.DataRelation relationCUSTOMER_FK1;
        
        private global::System.Data.DataRelation relationMANAGER_FK1;
        
        private global::System.Data.DataRelation relationSTAFF_FK1;
        
        private global::System.Data.DataRelation relationRENTAL_FK1;
        
        private global::System.Data.DataRelation relationRENTAL_FK2;
        
        private global::System.Data.DataRelation relationRENTAL_FK3;
        
        private global::System.Data.DataRelation relationRESERVATION_FK1;
        
        private global::System.Data.DataRelation relationRESERVATION_FK2;
        
        private global::System.Data.DataRelation relationREVIEW_FK1;
        
        private global::System.Data.DataRelation relationRENTAL_FK11;
        
        private global::System.Data.DataRelation relationRESERVATION_FK11;
        
        private global::System.Data.DataRelation relationRENTAL_FK12;
        
        private global::System.Data.DataRelation relationRESERVATION_FK12;
        
        private global::System.Data.DataRelation relationRENTAL_FK4;
        
        private global::System.Data.DataRelation relationCLOTHES_FK21;
        
        private global::System.Data.DataRelation relationLATEFEE_FK1;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DataSet1() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected DataSet1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["HUMAN"] != null)) {
                    base.Tables.Add(new HUMANDataTable(ds.Tables["HUMAN"]));
                }
                if ((ds.Tables["BLACKLIST"] != null)) {
                    base.Tables.Add(new BLACKLISTDataTable(ds.Tables["BLACKLIST"]));
                }
                if ((ds.Tables["CATEGORY"] != null)) {
                    base.Tables.Add(new CATEGORYDataTable(ds.Tables["CATEGORY"]));
                }
                if ((ds.Tables["CLOTHES"] != null)) {
                    base.Tables.Add(new CLOTHESDataTable(ds.Tables["CLOTHES"]));
                }
                if ((ds.Tables["CUSTOMER"] != null)) {
                    base.Tables.Add(new CUSTOMERDataTable(ds.Tables["CUSTOMER"]));
                }
                if ((ds.Tables["MANAGER"] != null)) {
                    base.Tables.Add(new MANAGERDataTable(ds.Tables["MANAGER"]));
                }
                if ((ds.Tables["PAY"] != null)) {
                    base.Tables.Add(new PAYDataTable(ds.Tables["PAY"]));
                }
                if ((ds.Tables["STAFF"] != null)) {
                    base.Tables.Add(new STAFFDataTable(ds.Tables["STAFF"]));
                }
                if ((ds.Tables["RENTAL"] != null)) {
                    base.Tables.Add(new RENTALDataTable(ds.Tables["RENTAL"]));
                }
                if ((ds.Tables["RESERVATION"] != null)) {
                    base.Tables.Add(new RESERVATIONDataTable(ds.Tables["RESERVATION"]));
                }
                if ((ds.Tables["REVIEW"] != null)) {
                    base.Tables.Add(new REVIEWDataTable(ds.Tables["REVIEW"]));
                }
                if ((ds.Tables["DataTable1"] != null)) {
                    base.Tables.Add(new DataTable1DataTable(ds.Tables["DataTable1"]));
                }
                if ((ds.Tables["DataTable2"] != null)) {
                    base.Tables.Add(new DataTable2DataTable(ds.Tables["DataTable2"]));
                }
                if ((ds.Tables["LATEFEE"] != null)) {
                    base.Tables.Add(new LATEFEEDataTable(ds.Tables["LATEFEE"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public HUMANDataTable HUMAN {
            get {
                return this.tableHUMAN;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BLACKLISTDataTable BLACKLIST {
            get {
                return this.tableBLACKLIST;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CATEGORYDataTable CATEGORY {
            get {
                return this.tableCATEGORY;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CLOTHESDataTable CLOTHES {
            get {
                return this.tableCLOTHES;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CUSTOMERDataTable CUSTOMER {
            get {
                return this.tableCUSTOMER;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MANAGERDataTable MANAGER {
            get {
                return this.tableMANAGER;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PAYDataTable PAY {
            get {
                return this.tablePAY;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public STAFFDataTable STAFF {
            get {
                return this.tableSTAFF;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RENTALDataTable RENTAL {
            get {
                return this.tableRENTAL;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RESERVATIONDataTable RESERVATION {
            get {
                return this.tableRESERVATION;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public REVIEWDataTable REVIEW {
            get {
                return this.tableREVIEW;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DataTable1DataTable DataTable1 {
            get {
                return this.tableDataTable1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DataTable2DataTable DataTable2 {
            get {
                return this.tableDataTable2;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LATEFEEDataTable LATEFEE {
            get {
                return this.tableLATEFEE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DataSet1 cln = ((DataSet1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["HUMAN"] != null)) {
                    base.Tables.Add(new HUMANDataTable(ds.Tables["HUMAN"]));
                }
                if ((ds.Tables["BLACKLIST"] != null)) {
                    base.Tables.Add(new BLACKLISTDataTable(ds.Tables["BLACKLIST"]));
                }
                if ((ds.Tables["CATEGORY"] != null)) {
                    base.Tables.Add(new CATEGORYDataTable(ds.Tables["CATEGORY"]));
                }
                if ((ds.Tables["CLOTHES"] != null)) {
                    base.Tables.Add(new CLOTHESDataTable(ds.Tables["CLOTHES"]));
                }
                if ((ds.Tables["CUSTOMER"] != null)) {
                    base.Tables.Add(new CUSTOMERDataTable(ds.Tables["CUSTOMER"]));
                }
                if ((ds.Tables["MANAGER"] != null)) {
                    base.Tables.Add(new MANAGERDataTable(ds.Tables["MANAGER"]));
                }
                if ((ds.Tables["PAY"] != null)) {
                    base.Tables.Add(new PAYDataTable(ds.Tables["PAY"]));
                }
                if ((ds.Tables["STAFF"] != null)) {
                    base.Tables.Add(new STAFFDataTable(ds.Tables["STAFF"]));
                }
                if ((ds.Tables["RENTAL"] != null)) {
                    base.Tables.Add(new RENTALDataTable(ds.Tables["RENTAL"]));
                }
                if ((ds.Tables["RESERVATION"] != null)) {
                    base.Tables.Add(new RESERVATIONDataTable(ds.Tables["RESERVATION"]));
                }
                if ((ds.Tables["REVIEW"] != null)) {
                    base.Tables.Add(new REVIEWDataTable(ds.Tables["REVIEW"]));
                }
                if ((ds.Tables["DataTable1"] != null)) {
                    base.Tables.Add(new DataTable1DataTable(ds.Tables["DataTable1"]));
                }
                if ((ds.Tables["DataTable2"] != null)) {
                    base.Tables.Add(new DataTable2DataTable(ds.Tables["DataTable2"]));
                }
                if ((ds.Tables["LATEFEE"] != null)) {
                    base.Tables.Add(new LATEFEEDataTable(ds.Tables["LATEFEE"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableHUMAN = ((HUMANDataTable)(base.Tables["HUMAN"]));
            if ((initTable == true)) {
                if ((this.tableHUMAN != null)) {
                    this.tableHUMAN.InitVars();
                }
            }
            this.tableBLACKLIST = ((BLACKLISTDataTable)(base.Tables["BLACKLIST"]));
            if ((initTable == true)) {
                if ((this.tableBLACKLIST != null)) {
                    this.tableBLACKLIST.InitVars();
                }
            }
            this.tableCATEGORY = ((CATEGORYDataTable)(base.Tables["CATEGORY"]));
            if ((initTable == true)) {
                if ((this.tableCATEGORY != null)) {
                    this.tableCATEGORY.InitVars();
                }
            }
            this.tableCLOTHES = ((CLOTHESDataTable)(base.Tables["CLOTHES"]));
            if ((initTable == true)) {
                if ((this.tableCLOTHES != null)) {
                    this.tableCLOTHES.InitVars();
                }
            }
            this.tableCUSTOMER = ((CUSTOMERDataTable)(base.Tables["CUSTOMER"]));
            if ((initTable == true)) {
                if ((this.tableCUSTOMER != null)) {
                    this.tableCUSTOMER.InitVars();
                }
            }
            this.tableMANAGER = ((MANAGERDataTable)(base.Tables["MANAGER"]));
            if ((initTable == true)) {
                if ((this.tableMANAGER != null)) {
                    this.tableMANAGER.InitVars();
                }
            }
            this.tablePAY = ((PAYDataTable)(base.Tables["PAY"]));
            if ((initTable == true)) {
                if ((this.tablePAY != null)) {
                    this.tablePAY.InitVars();
                }
            }
            this.tableSTAFF = ((STAFFDataTable)(base.Tables["STAFF"]));
            if ((initTable == true)) {
                if ((this.tableSTAFF != null)) {
                    this.tableSTAFF.InitVars();
                }
            }
            this.tableRENTAL = ((RENTALDataTable)(base.Tables["RENTAL"]));
            if ((initTable == true)) {
                if ((this.tableRENTAL != null)) {
                    this.tableRENTAL.InitVars();
                }
            }
            this.tableRESERVATION = ((RESERVATIONDataTable)(base.Tables["RESERVATION"]));
            if ((initTable == true)) {
                if ((this.tableRESERVATION != null)) {
                    this.tableRESERVATION.InitVars();
                }
            }
            this.tableREVIEW = ((REVIEWDataTable)(base.Tables["REVIEW"]));
            if ((initTable == true)) {
                if ((this.tableREVIEW != null)) {
                    this.tableREVIEW.InitVars();
                }
            }
            this.tableDataTable1 = ((DataTable1DataTable)(base.Tables["DataTable1"]));
            if ((initTable == true)) {
                if ((this.tableDataTable1 != null)) {
                    this.tableDataTable1.InitVars();
                }
            }
            this.tableDataTable2 = ((DataTable2DataTable)(base.Tables["DataTable2"]));
            if ((initTable == true)) {
                if ((this.tableDataTable2 != null)) {
                    this.tableDataTable2.InitVars();
                }
            }
            this.tableLATEFEE = ((LATEFEEDataTable)(base.Tables["LATEFEE"]));
            if ((initTable == true)) {
                if ((this.tableLATEFEE != null)) {
                    this.tableLATEFEE.InitVars();
                }
            }
            this.relationBLACKLIST_FK1 = this.Relations["BLACKLIST_FK1"];
            this.relationCLOTHES_FK1 = this.Relations["CLOTHES_FK1"];
            this.relationCLOTHES_FK2 = this.Relations["CLOTHES_FK2"];
            this.relationCUSTOMER_FK1 = this.Relations["CUSTOMER_FK1"];
            this.relationMANAGER_FK1 = this.Relations["MANAGER_FK1"];
            this.relationSTAFF_FK1 = this.Relations["STAFF_FK1"];
            this.relationRENTAL_FK1 = this.Relations["RENTAL_FK1"];
            this.relationRENTAL_FK2 = this.Relations["RENTAL_FK2"];
            this.relationRENTAL_FK3 = this.Relations["RENTAL_FK3"];
            this.relationRESERVATION_FK1 = this.Relations["RESERVATION_FK1"];
            this.relationRESERVATION_FK2 = this.Relations["RESERVATION_FK2"];
            this.relationREVIEW_FK1 = this.Relations["REVIEW_FK1"];
            this.relationRENTAL_FK11 = this.Relations["RENTAL_FK11"];
            this.relationRESERVATION_FK11 = this.Relations["RESERVATION_FK11"];
            this.relationRENTAL_FK12 = this.Relations["RENTAL_FK12"];
            this.relationRESERVATION_FK12 = this.Relations["RESERVATION_FK12"];
            this.relationRENTAL_FK4 = this.Relations["RENTAL_FK4"];
            this.relationCLOTHES_FK21 = this.Relations["CLOTHES_FK21"];
            this.relationLATEFEE_FK1 = this.Relations["LATEFEE_FK1"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DataSet1";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSet1.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableHUMAN = new HUMANDataTable();
            base.Tables.Add(this.tableHUMAN);
            this.tableBLACKLIST = new BLACKLISTDataTable();
            base.Tables.Add(this.tableBLACKLIST);
            this.tableCATEGORY = new CATEGORYDataTable();
            base.Tables.Add(this.tableCATEGORY);
            this.tableCLOTHES = new CLOTHESDataTable();
            base.Tables.Add(this.tableCLOTHES);
            this.tableCUSTOMER = new CUSTOMERDataTable();
            base.Tables.Add(this.tableCUSTOMER);
            this.tableMANAGER = new MANAGERDataTable();
            base.Tables.Add(this.tableMANAGER);
            this.tablePAY = new PAYDataTable();
            base.Tables.Add(this.tablePAY);
            this.tableSTAFF = new STAFFDataTable();
            base.Tables.Add(this.tableSTAFF);
            this.tableRENTAL = new RENTALDataTable();
            base.Tables.Add(this.tableRENTAL);
            this.tableRESERVATION = new RESERVATIONDataTable();
            base.Tables.Add(this.tableRESERVATION);
            this.tableREVIEW = new REVIEWDataTable();
            base.Tables.Add(this.tableREVIEW);
            this.tableDataTable1 = new DataTable1DataTable();
            base.Tables.Add(this.tableDataTable1);
            this.tableDataTable2 = new DataTable2DataTable();
            base.Tables.Add(this.tableDataTable2);
            this.tableLATEFEE = new LATEFEEDataTable();
            base.Tables.Add(this.tableLATEFEE);
            this.relationBLACKLIST_FK1 = new global::System.Data.DataRelation("BLACKLIST_FK1", new global::System.Data.DataColumn[] {
                        this.tableCUSTOMER.CUS_IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableBLACKLIST.CUS_IDColumn}, false);
            this.Relations.Add(this.relationBLACKLIST_FK1);
            this.relationCLOTHES_FK1 = new global::System.Data.DataRelation("CLOTHES_FK1", new global::System.Data.DataColumn[] {
                        this.tableCATEGORY.CAT_IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableCLOTHES.CAT_IDColumn}, false);
            this.Relations.Add(this.relationCLOTHES_FK1);
            this.relationCLOTHES_FK2 = new global::System.Data.DataRelation("CLOTHES_FK2", new global::System.Data.DataColumn[] {
                        this.tablePAY.GRADEColumn}, new global::System.Data.DataColumn[] {
                        this.tableCLOTHES.GRADEColumn}, false);
            this.Relations.Add(this.relationCLOTHES_FK2);
            this.relationCUSTOMER_FK1 = new global::System.Data.DataRelation("CUSTOMER_FK1", new global::System.Data.DataColumn[] {
                        this.tableHUMAN.IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableCUSTOMER.CUS_IDColumn}, false);
            this.Relations.Add(this.relationCUSTOMER_FK1);
            this.relationMANAGER_FK1 = new global::System.Data.DataRelation("MANAGER_FK1", new global::System.Data.DataColumn[] {
                        this.tableHUMAN.IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableMANAGER.MAN_IDColumn}, false);
            this.Relations.Add(this.relationMANAGER_FK1);
            this.relationSTAFF_FK1 = new global::System.Data.DataRelation("STAFF_FK1", new global::System.Data.DataColumn[] {
                        this.tableHUMAN.IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableSTAFF.STA_IDColumn}, false);
            this.Relations.Add(this.relationSTAFF_FK1);
            this.relationRENTAL_FK1 = new global::System.Data.DataRelation("RENTAL_FK1", new global::System.Data.DataColumn[] {
                        this.tableCLOTHES.CLO_IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableRENTAL.CLO_IDColumn}, false);
            this.Relations.Add(this.relationRENTAL_FK1);
            this.relationRENTAL_FK2 = new global::System.Data.DataRelation("RENTAL_FK2", new global::System.Data.DataColumn[] {
                        this.tableCUSTOMER.CUS_IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableRENTAL.CUS_IDColumn}, false);
            this.Relations.Add(this.relationRENTAL_FK2);
            this.relationRENTAL_FK3 = new global::System.Data.DataRelation("RENTAL_FK3", new global::System.Data.DataColumn[] {
                        this.tableSTAFF.STA_IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableRENTAL.STA_IDColumn}, false);
            this.Relations.Add(this.relationRENTAL_FK3);
            this.relationRESERVATION_FK1 = new global::System.Data.DataRelation("RESERVATION_FK1", new global::System.Data.DataColumn[] {
                        this.tableCLOTHES.CLO_IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableRESERVATION.CLO_IDColumn}, false);
            this.Relations.Add(this.relationRESERVATION_FK1);
            this.relationRESERVATION_FK2 = new global::System.Data.DataRelation("RESERVATION_FK2", new global::System.Data.DataColumn[] {
                        this.tableCUSTOMER.CUS_IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableRESERVATION.CUS_IDColumn}, false);
            this.Relations.Add(this.relationRESERVATION_FK2);
            this.relationREVIEW_FK1 = new global::System.Data.DataRelation("REVIEW_FK1", new global::System.Data.DataColumn[] {
                        this.tableRENTAL.REN_NOColumn}, new global::System.Data.DataColumn[] {
                        this.tableREVIEW.REN_NOColumn}, false);
            this.Relations.Add(this.relationREVIEW_FK1);
            this.relationRENTAL_FK11 = new global::System.Data.DataRelation("RENTAL_FK11", new global::System.Data.DataColumn[] {
                        this.tableDataTable1.CLO_IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableRENTAL.CLO_IDColumn}, false);
            this.Relations.Add(this.relationRENTAL_FK11);
            this.relationRESERVATION_FK11 = new global::System.Data.DataRelation("RESERVATION_FK11", new global::System.Data.DataColumn[] {
                        this.tableDataTable1.CLO_IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableRESERVATION.CLO_IDColumn}, false);
            this.Relations.Add(this.relationRESERVATION_FK11);
            this.relationRENTAL_FK12 = new global::System.Data.DataRelation("RENTAL_FK12", new global::System.Data.DataColumn[] {
                        this.tableDataTable2.CLO_IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableRENTAL.CLO_IDColumn}, false);
            this.Relations.Add(this.relationRENTAL_FK12);
            this.relationRESERVATION_FK12 = new global::System.Data.DataRelation("RESERVATION_FK12", new global::System.Data.DataColumn[] {
                        this.tableDataTable2.CLO_IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableRESERVATION.CLO_IDColumn}, false);
            this.Relations.Add(this.relationRESERVATION_FK12);
            this.relationRENTAL_FK4 = new global::System.Data.DataRelation("RENTAL_FK4", new global::System.Data.DataColumn[] {
                        this.tableSTAFF.STA_IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableRENTAL.RET_IDColumn}, false);
            this.Relations.Add(this.relationRENTAL_FK4);
            this.relationCLOTHES_FK21 = new global::System.Data.DataRelation("CLOTHES_FK21", new global::System.Data.DataColumn[] {
                        this.tablePAY.GRADEColumn}, new global::System.Data.DataColumn[] {
                        this.tableDataTable1.GRADEColumn}, false);
            this.Relations.Add(this.relationCLOTHES_FK21);
            this.relationLATEFEE_FK1 = new global::System.Data.DataRelation("LATEFEE_FK1", new global::System.Data.DataColumn[] {
                        this.tableCUSTOMER.CUS_IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableLATEFEE.CUS_IDColumn}, false);
            this.Relations.Add(this.relationLATEFEE_FK1);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeHUMAN() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeBLACKLIST() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeCATEGORY() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeCLOTHES() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeCUSTOMER() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeMANAGER() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializePAY() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSTAFF() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeRENTAL() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeRESERVATION() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeREVIEW() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeDataTable1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeDataTable2() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeLATEFEE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSet1 ds = new DataSet1();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void HUMANRowChangeEventHandler(object sender, HUMANRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void BLACKLISTRowChangeEventHandler(object sender, BLACKLISTRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void CATEGORYRowChangeEventHandler(object sender, CATEGORYRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void CLOTHESRowChangeEventHandler(object sender, CLOTHESRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void CUSTOMERRowChangeEventHandler(object sender, CUSTOMERRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void MANAGERRowChangeEventHandler(object sender, MANAGERRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void PAYRowChangeEventHandler(object sender, PAYRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void STAFFRowChangeEventHandler(object sender, STAFFRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void RENTALRowChangeEventHandler(object sender, RENTALRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void RESERVATIONRowChangeEventHandler(object sender, RESERVATIONRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void REVIEWRowChangeEventHandler(object sender, REVIEWRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void DataTable1RowChangeEventHandler(object sender, DataTable1RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void DataTable2RowChangeEventHandler(object sender, DataTable2RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void LATEFEERowChangeEventHandler(object sender, LATEFEERowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class HUMANDataTable : global::System.Data.TypedTableBase<HUMANRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnPASSWORD;
            
            private global::System.Data.DataColumn columnROLE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public HUMANDataTable() {
                this.TableName = "HUMAN";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal HUMANDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected HUMANDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PASSWORDColumn {
                get {
                    return this.columnPASSWORD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ROLEColumn {
                get {
                    return this.columnROLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public HUMANRow this[int index] {
                get {
                    return ((HUMANRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event HUMANRowChangeEventHandler HUMANRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event HUMANRowChangeEventHandler HUMANRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event HUMANRowChangeEventHandler HUMANRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event HUMANRowChangeEventHandler HUMANRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddHUMANRow(HUMANRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public HUMANRow AddHUMANRow(string ID, string PASSWORD, string ROLE) {
                HUMANRow rowHUMANRow = ((HUMANRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        PASSWORD,
                        ROLE};
                rowHUMANRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowHUMANRow);
                return rowHUMANRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public HUMANRow FindByID(string ID) {
                return ((HUMANRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                HUMANDataTable cln = ((HUMANDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new HUMANDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnPASSWORD = base.Columns["PASSWORD"];
                this.columnROLE = base.Columns["ROLE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnPASSWORD = new global::System.Data.DataColumn("PASSWORD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPASSWORD);
                this.columnROLE = new global::System.Data.DataColumn("ROLE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROLE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnID.MaxLength = 50;
                this.columnPASSWORD.AllowDBNull = false;
                this.columnPASSWORD.MaxLength = 50;
                this.columnROLE.AllowDBNull = false;
                this.columnROLE.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public HUMANRow NewHUMANRow() {
                return ((HUMANRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new HUMANRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(HUMANRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.HUMANRowChanged != null)) {
                    this.HUMANRowChanged(this, new HUMANRowChangeEvent(((HUMANRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.HUMANRowChanging != null)) {
                    this.HUMANRowChanging(this, new HUMANRowChangeEvent(((HUMANRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.HUMANRowDeleted != null)) {
                    this.HUMANRowDeleted(this, new HUMANRowChangeEvent(((HUMANRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.HUMANRowDeleting != null)) {
                    this.HUMANRowDeleting(this, new HUMANRowChangeEvent(((HUMANRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveHUMANRow(HUMANRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "HUMANDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BLACKLISTDataTable : global::System.Data.TypedTableBase<BLACKLISTRow> {
            
            private global::System.Data.DataColumn columnCUS_ID;
            
            private global::System.Data.DataColumn columnREASON;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BLACKLISTDataTable() {
                this.TableName = "BLACKLIST";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal BLACKLISTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected BLACKLISTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CUS_IDColumn {
                get {
                    return this.columnCUS_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn REASONColumn {
                get {
                    return this.columnREASON;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BLACKLISTRow this[int index] {
                get {
                    return ((BLACKLISTRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BLACKLISTRowChangeEventHandler BLACKLISTRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BLACKLISTRowChangeEventHandler BLACKLISTRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BLACKLISTRowChangeEventHandler BLACKLISTRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BLACKLISTRowChangeEventHandler BLACKLISTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddBLACKLISTRow(BLACKLISTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BLACKLISTRow AddBLACKLISTRow(CUSTOMERRow parentCUSTOMERRowByBLACKLIST_FK1, string REASON) {
                BLACKLISTRow rowBLACKLISTRow = ((BLACKLISTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        REASON};
                if ((parentCUSTOMERRowByBLACKLIST_FK1 != null)) {
                    columnValuesArray[0] = parentCUSTOMERRowByBLACKLIST_FK1[0];
                }
                rowBLACKLISTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBLACKLISTRow);
                return rowBLACKLISTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BLACKLISTRow FindByCUS_ID(string CUS_ID) {
                return ((BLACKLISTRow)(this.Rows.Find(new object[] {
                            CUS_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                BLACKLISTDataTable cln = ((BLACKLISTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BLACKLISTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCUS_ID = base.Columns["CUS_ID"];
                this.columnREASON = base.Columns["REASON"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCUS_ID = new global::System.Data.DataColumn("CUS_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUS_ID);
                this.columnREASON = new global::System.Data.DataColumn("REASON", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREASON);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCUS_ID}, true));
                this.columnCUS_ID.AllowDBNull = false;
                this.columnCUS_ID.Unique = true;
                this.columnCUS_ID.MaxLength = 50;
                this.columnREASON.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BLACKLISTRow NewBLACKLISTRow() {
                return ((BLACKLISTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BLACKLISTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(BLACKLISTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BLACKLISTRowChanged != null)) {
                    this.BLACKLISTRowChanged(this, new BLACKLISTRowChangeEvent(((BLACKLISTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BLACKLISTRowChanging != null)) {
                    this.BLACKLISTRowChanging(this, new BLACKLISTRowChangeEvent(((BLACKLISTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BLACKLISTRowDeleted != null)) {
                    this.BLACKLISTRowDeleted(this, new BLACKLISTRowChangeEvent(((BLACKLISTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BLACKLISTRowDeleting != null)) {
                    this.BLACKLISTRowDeleting(this, new BLACKLISTRowChangeEvent(((BLACKLISTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveBLACKLISTRow(BLACKLISTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BLACKLISTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CATEGORYDataTable : global::System.Data.TypedTableBase<CATEGORYRow> {
            
            private global::System.Data.DataColumn columnCAT_ID;
            
            private global::System.Data.DataColumn columnCAT_NAME;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CATEGORYDataTable() {
                this.TableName = "CATEGORY";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CATEGORYDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected CATEGORYDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CAT_IDColumn {
                get {
                    return this.columnCAT_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CAT_NAMEColumn {
                get {
                    return this.columnCAT_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CATEGORYRow this[int index] {
                get {
                    return ((CATEGORYRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CATEGORYRowChangeEventHandler CATEGORYRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CATEGORYRowChangeEventHandler CATEGORYRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CATEGORYRowChangeEventHandler CATEGORYRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CATEGORYRowChangeEventHandler CATEGORYRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddCATEGORYRow(CATEGORYRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CATEGORYRow AddCATEGORYRow(string CAT_ID, string CAT_NAME) {
                CATEGORYRow rowCATEGORYRow = ((CATEGORYRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CAT_ID,
                        CAT_NAME};
                rowCATEGORYRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCATEGORYRow);
                return rowCATEGORYRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CATEGORYRow FindByCAT_ID(string CAT_ID) {
                return ((CATEGORYRow)(this.Rows.Find(new object[] {
                            CAT_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                CATEGORYDataTable cln = ((CATEGORYDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CATEGORYDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCAT_ID = base.Columns["CAT_ID"];
                this.columnCAT_NAME = base.Columns["CAT_NAME"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCAT_ID = new global::System.Data.DataColumn("CAT_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCAT_ID);
                this.columnCAT_NAME = new global::System.Data.DataColumn("CAT_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCAT_NAME);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCAT_ID}, true));
                this.columnCAT_ID.AllowDBNull = false;
                this.columnCAT_ID.Unique = true;
                this.columnCAT_ID.MaxLength = 50;
                this.columnCAT_NAME.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CATEGORYRow NewCATEGORYRow() {
                return ((CATEGORYRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CATEGORYRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(CATEGORYRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CATEGORYRowChanged != null)) {
                    this.CATEGORYRowChanged(this, new CATEGORYRowChangeEvent(((CATEGORYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CATEGORYRowChanging != null)) {
                    this.CATEGORYRowChanging(this, new CATEGORYRowChangeEvent(((CATEGORYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CATEGORYRowDeleted != null)) {
                    this.CATEGORYRowDeleted(this, new CATEGORYRowChangeEvent(((CATEGORYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CATEGORYRowDeleting != null)) {
                    this.CATEGORYRowDeleting(this, new CATEGORYRowChangeEvent(((CATEGORYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveCATEGORYRow(CATEGORYRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CATEGORYDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CLOTHESDataTable : global::System.Data.TypedTableBase<CLOTHESRow> {
            
            private global::System.Data.DataColumn columnCLO_ID;
            
            private global::System.Data.DataColumn columnCLO_NAME;
            
            private global::System.Data.DataColumn columnCLO_BRAND;
            
            private global::System.Data.DataColumn columnCLO_SIZE;
            
            private global::System.Data.DataColumn columnCLO_COLOR;
            
            private global::System.Data.DataColumn columnCLO_LOCATION;
            
            private global::System.Data.DataColumn columnCLO_RETURNDAY;
            
            private global::System.Data.DataColumn columnCLO_RENTAL;
            
            private global::System.Data.DataColumn columnCLO_RESERVATION;
            
            private global::System.Data.DataColumn columnCAT_ID;
            
            private global::System.Data.DataColumn columnGRADE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CLOTHESDataTable() {
                this.TableName = "CLOTHES";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CLOTHESDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected CLOTHESDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CLO_IDColumn {
                get {
                    return this.columnCLO_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CLO_NAMEColumn {
                get {
                    return this.columnCLO_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CLO_BRANDColumn {
                get {
                    return this.columnCLO_BRAND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CLO_SIZEColumn {
                get {
                    return this.columnCLO_SIZE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CLO_COLORColumn {
                get {
                    return this.columnCLO_COLOR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CLO_LOCATIONColumn {
                get {
                    return this.columnCLO_LOCATION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CLO_RETURNDAYColumn {
                get {
                    return this.columnCLO_RETURNDAY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CLO_RENTALColumn {
                get {
                    return this.columnCLO_RENTAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CLO_RESERVATIONColumn {
                get {
                    return this.columnCLO_RESERVATION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CAT_IDColumn {
                get {
                    return this.columnCAT_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GRADEColumn {
                get {
                    return this.columnGRADE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CLOTHESRow this[int index] {
                get {
                    return ((CLOTHESRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CLOTHESRowChangeEventHandler CLOTHESRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CLOTHESRowChangeEventHandler CLOTHESRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CLOTHESRowChangeEventHandler CLOTHESRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CLOTHESRowChangeEventHandler CLOTHESRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddCLOTHESRow(CLOTHESRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CLOTHESRow AddCLOTHESRow(string CLO_ID, string CLO_NAME, string CLO_BRAND, string CLO_SIZE, string CLO_COLOR, string CLO_LOCATION, string CLO_RETURNDAY, string CLO_RENTAL, string CLO_RESERVATION, CATEGORYRow parentCATEGORYRowByCLOTHES_FK1, PAYRow parentPAYRowByCLOTHES_FK2) {
                CLOTHESRow rowCLOTHESRow = ((CLOTHESRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CLO_ID,
                        CLO_NAME,
                        CLO_BRAND,
                        CLO_SIZE,
                        CLO_COLOR,
                        CLO_LOCATION,
                        CLO_RETURNDAY,
                        CLO_RENTAL,
                        CLO_RESERVATION,
                        null,
                        null};
                if ((parentCATEGORYRowByCLOTHES_FK1 != null)) {
                    columnValuesArray[9] = parentCATEGORYRowByCLOTHES_FK1[0];
                }
                if ((parentPAYRowByCLOTHES_FK2 != null)) {
                    columnValuesArray[10] = parentPAYRowByCLOTHES_FK2[0];
                }
                rowCLOTHESRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCLOTHESRow);
                return rowCLOTHESRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CLOTHESRow FindByCLO_ID(string CLO_ID) {
                return ((CLOTHESRow)(this.Rows.Find(new object[] {
                            CLO_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                CLOTHESDataTable cln = ((CLOTHESDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CLOTHESDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCLO_ID = base.Columns["CLO_ID"];
                this.columnCLO_NAME = base.Columns["CLO_NAME"];
                this.columnCLO_BRAND = base.Columns["CLO_BRAND"];
                this.columnCLO_SIZE = base.Columns["CLO_SIZE"];
                this.columnCLO_COLOR = base.Columns["CLO_COLOR"];
                this.columnCLO_LOCATION = base.Columns["CLO_LOCATION"];
                this.columnCLO_RETURNDAY = base.Columns["CLO_RETURNDAY"];
                this.columnCLO_RENTAL = base.Columns["CLO_RENTAL"];
                this.columnCLO_RESERVATION = base.Columns["CLO_RESERVATION"];
                this.columnCAT_ID = base.Columns["CAT_ID"];
                this.columnGRADE = base.Columns["GRADE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCLO_ID = new global::System.Data.DataColumn("CLO_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCLO_ID);
                this.columnCLO_NAME = new global::System.Data.DataColumn("CLO_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCLO_NAME);
                this.columnCLO_BRAND = new global::System.Data.DataColumn("CLO_BRAND", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCLO_BRAND);
                this.columnCLO_SIZE = new global::System.Data.DataColumn("CLO_SIZE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCLO_SIZE);
                this.columnCLO_COLOR = new global::System.Data.DataColumn("CLO_COLOR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCLO_COLOR);
                this.columnCLO_LOCATION = new global::System.Data.DataColumn("CLO_LOCATION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCLO_LOCATION);
                this.columnCLO_RETURNDAY = new global::System.Data.DataColumn("CLO_RETURNDAY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCLO_RETURNDAY);
                this.columnCLO_RENTAL = new global::System.Data.DataColumn("CLO_RENTAL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCLO_RENTAL);
                this.columnCLO_RESERVATION = new global::System.Data.DataColumn("CLO_RESERVATION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCLO_RESERVATION);
                this.columnCAT_ID = new global::System.Data.DataColumn("CAT_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCAT_ID);
                this.columnGRADE = new global::System.Data.DataColumn("GRADE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGRADE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCLO_ID}, true));
                this.columnCLO_ID.AllowDBNull = false;
                this.columnCLO_ID.Unique = true;
                this.columnCLO_ID.MaxLength = 50;
                this.columnCLO_NAME.MaxLength = 50;
                this.columnCLO_BRAND.MaxLength = 50;
                this.columnCLO_SIZE.MaxLength = 50;
                this.columnCLO_COLOR.MaxLength = 50;
                this.columnCLO_LOCATION.MaxLength = 50;
                this.columnCLO_RETURNDAY.MaxLength = 50;
                this.columnCLO_RENTAL.MaxLength = 50;
                this.columnCLO_RESERVATION.MaxLength = 50;
                this.columnCAT_ID.MaxLength = 50;
                this.columnGRADE.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CLOTHESRow NewCLOTHESRow() {
                return ((CLOTHESRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CLOTHESRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(CLOTHESRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CLOTHESRowChanged != null)) {
                    this.CLOTHESRowChanged(this, new CLOTHESRowChangeEvent(((CLOTHESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CLOTHESRowChanging != null)) {
                    this.CLOTHESRowChanging(this, new CLOTHESRowChangeEvent(((CLOTHESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CLOTHESRowDeleted != null)) {
                    this.CLOTHESRowDeleted(this, new CLOTHESRowChangeEvent(((CLOTHESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CLOTHESRowDeleting != null)) {
                    this.CLOTHESRowDeleting(this, new CLOTHESRowChangeEvent(((CLOTHESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveCLOTHESRow(CLOTHESRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CLOTHESDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CUSTOMERDataTable : global::System.Data.TypedTableBase<CUSTOMERRow> {
            
            private global::System.Data.DataColumn columnCUS_ID;
            
            private global::System.Data.DataColumn columnCUS_NAME;
            
            private global::System.Data.DataColumn columnCUS_CALL;
            
            private global::System.Data.DataColumn columnCUS_MAIL;
            
            private global::System.Data.DataColumn columnCUS_FEE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CUSTOMERDataTable() {
                this.TableName = "CUSTOMER";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CUSTOMERDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected CUSTOMERDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CUS_IDColumn {
                get {
                    return this.columnCUS_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CUS_NAMEColumn {
                get {
                    return this.columnCUS_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CUS_CALLColumn {
                get {
                    return this.columnCUS_CALL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CUS_MAILColumn {
                get {
                    return this.columnCUS_MAIL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CUS_FEEColumn {
                get {
                    return this.columnCUS_FEE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CUSTOMERRow this[int index] {
                get {
                    return ((CUSTOMERRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CUSTOMERRowChangeEventHandler CUSTOMERRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CUSTOMERRowChangeEventHandler CUSTOMERRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CUSTOMERRowChangeEventHandler CUSTOMERRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CUSTOMERRowChangeEventHandler CUSTOMERRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddCUSTOMERRow(CUSTOMERRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CUSTOMERRow AddCUSTOMERRow(HUMANRow parentHUMANRowByCUSTOMER_FK1, string CUS_NAME, string CUS_CALL, string CUS_MAIL, string CUS_FEE) {
                CUSTOMERRow rowCUSTOMERRow = ((CUSTOMERRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        CUS_NAME,
                        CUS_CALL,
                        CUS_MAIL,
                        CUS_FEE};
                if ((parentHUMANRowByCUSTOMER_FK1 != null)) {
                    columnValuesArray[0] = parentHUMANRowByCUSTOMER_FK1[0];
                }
                rowCUSTOMERRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCUSTOMERRow);
                return rowCUSTOMERRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CUSTOMERRow FindByCUS_ID(string CUS_ID) {
                return ((CUSTOMERRow)(this.Rows.Find(new object[] {
                            CUS_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                CUSTOMERDataTable cln = ((CUSTOMERDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CUSTOMERDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCUS_ID = base.Columns["CUS_ID"];
                this.columnCUS_NAME = base.Columns["CUS_NAME"];
                this.columnCUS_CALL = base.Columns["CUS_CALL"];
                this.columnCUS_MAIL = base.Columns["CUS_MAIL"];
                this.columnCUS_FEE = base.Columns["CUS_FEE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCUS_ID = new global::System.Data.DataColumn("CUS_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUS_ID);
                this.columnCUS_NAME = new global::System.Data.DataColumn("CUS_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUS_NAME);
                this.columnCUS_CALL = new global::System.Data.DataColumn("CUS_CALL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUS_CALL);
                this.columnCUS_MAIL = new global::System.Data.DataColumn("CUS_MAIL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUS_MAIL);
                this.columnCUS_FEE = new global::System.Data.DataColumn("CUS_FEE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUS_FEE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCUS_ID}, true));
                this.columnCUS_ID.AllowDBNull = false;
                this.columnCUS_ID.Unique = true;
                this.columnCUS_ID.MaxLength = 50;
                this.columnCUS_NAME.AllowDBNull = false;
                this.columnCUS_NAME.MaxLength = 20;
                this.columnCUS_CALL.AllowDBNull = false;
                this.columnCUS_CALL.MaxLength = 20;
                this.columnCUS_MAIL.AllowDBNull = false;
                this.columnCUS_MAIL.MaxLength = 20;
                this.columnCUS_FEE.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CUSTOMERRow NewCUSTOMERRow() {
                return ((CUSTOMERRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CUSTOMERRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(CUSTOMERRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CUSTOMERRowChanged != null)) {
                    this.CUSTOMERRowChanged(this, new CUSTOMERRowChangeEvent(((CUSTOMERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CUSTOMERRowChanging != null)) {
                    this.CUSTOMERRowChanging(this, new CUSTOMERRowChangeEvent(((CUSTOMERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CUSTOMERRowDeleted != null)) {
                    this.CUSTOMERRowDeleted(this, new CUSTOMERRowChangeEvent(((CUSTOMERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CUSTOMERRowDeleting != null)) {
                    this.CUSTOMERRowDeleting(this, new CUSTOMERRowChangeEvent(((CUSTOMERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveCUSTOMERRow(CUSTOMERRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CUSTOMERDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MANAGERDataTable : global::System.Data.TypedTableBase<MANAGERRow> {
            
            private global::System.Data.DataColumn columnMAN_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MANAGERDataTable() {
                this.TableName = "MANAGER";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal MANAGERDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected MANAGERDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MAN_IDColumn {
                get {
                    return this.columnMAN_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MANAGERRow this[int index] {
                get {
                    return ((MANAGERRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MANAGERRowChangeEventHandler MANAGERRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MANAGERRowChangeEventHandler MANAGERRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MANAGERRowChangeEventHandler MANAGERRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MANAGERRowChangeEventHandler MANAGERRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddMANAGERRow(MANAGERRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MANAGERRow AddMANAGERRow(HUMANRow parentHUMANRowByMANAGER_FK1) {
                MANAGERRow rowMANAGERRow = ((MANAGERRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null};
                if ((parentHUMANRowByMANAGER_FK1 != null)) {
                    columnValuesArray[0] = parentHUMANRowByMANAGER_FK1[0];
                }
                rowMANAGERRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMANAGERRow);
                return rowMANAGERRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MANAGERRow FindByMAN_ID(string MAN_ID) {
                return ((MANAGERRow)(this.Rows.Find(new object[] {
                            MAN_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                MANAGERDataTable cln = ((MANAGERDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MANAGERDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnMAN_ID = base.Columns["MAN_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnMAN_ID = new global::System.Data.DataColumn("MAN_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAN_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMAN_ID}, true));
                this.columnMAN_ID.AllowDBNull = false;
                this.columnMAN_ID.Unique = true;
                this.columnMAN_ID.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MANAGERRow NewMANAGERRow() {
                return ((MANAGERRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MANAGERRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(MANAGERRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MANAGERRowChanged != null)) {
                    this.MANAGERRowChanged(this, new MANAGERRowChangeEvent(((MANAGERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MANAGERRowChanging != null)) {
                    this.MANAGERRowChanging(this, new MANAGERRowChangeEvent(((MANAGERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MANAGERRowDeleted != null)) {
                    this.MANAGERRowDeleted(this, new MANAGERRowChangeEvent(((MANAGERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MANAGERRowDeleting != null)) {
                    this.MANAGERRowDeleting(this, new MANAGERRowChangeEvent(((MANAGERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveMANAGERRow(MANAGERRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MANAGERDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PAYDataTable : global::System.Data.TypedTableBase<PAYRow> {
            
            private global::System.Data.DataColumn columnGRADE;
            
            private global::System.Data.DataColumn columnFEE;
            
            private global::System.Data.DataColumn columnLATEFEE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PAYDataTable() {
                this.TableName = "PAY";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PAYDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected PAYDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GRADEColumn {
                get {
                    return this.columnGRADE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FEEColumn {
                get {
                    return this.columnFEE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LATEFEEColumn {
                get {
                    return this.columnLATEFEE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PAYRow this[int index] {
                get {
                    return ((PAYRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PAYRowChangeEventHandler PAYRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PAYRowChangeEventHandler PAYRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PAYRowChangeEventHandler PAYRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PAYRowChangeEventHandler PAYRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddPAYRow(PAYRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PAYRow AddPAYRow(string GRADE, string FEE, string LATEFEE) {
                PAYRow rowPAYRow = ((PAYRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        GRADE,
                        FEE,
                        LATEFEE};
                rowPAYRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPAYRow);
                return rowPAYRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PAYRow FindByGRADE(string GRADE) {
                return ((PAYRow)(this.Rows.Find(new object[] {
                            GRADE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                PAYDataTable cln = ((PAYDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PAYDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnGRADE = base.Columns["GRADE"];
                this.columnFEE = base.Columns["FEE"];
                this.columnLATEFEE = base.Columns["LATEFEE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnGRADE = new global::System.Data.DataColumn("GRADE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGRADE);
                this.columnFEE = new global::System.Data.DataColumn("FEE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFEE);
                this.columnLATEFEE = new global::System.Data.DataColumn("LATEFEE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLATEFEE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnGRADE}, true));
                this.columnGRADE.AllowDBNull = false;
                this.columnGRADE.Unique = true;
                this.columnGRADE.MaxLength = 50;
                this.columnFEE.MaxLength = 50;
                this.columnLATEFEE.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PAYRow NewPAYRow() {
                return ((PAYRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PAYRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(PAYRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PAYRowChanged != null)) {
                    this.PAYRowChanged(this, new PAYRowChangeEvent(((PAYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PAYRowChanging != null)) {
                    this.PAYRowChanging(this, new PAYRowChangeEvent(((PAYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PAYRowDeleted != null)) {
                    this.PAYRowDeleted(this, new PAYRowChangeEvent(((PAYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PAYRowDeleting != null)) {
                    this.PAYRowDeleting(this, new PAYRowChangeEvent(((PAYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovePAYRow(PAYRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PAYDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class STAFFDataTable : global::System.Data.TypedTableBase<STAFFRow> {
            
            private global::System.Data.DataColumn columnSTA_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public STAFFDataTable() {
                this.TableName = "STAFF";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal STAFFDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected STAFFDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STA_IDColumn {
                get {
                    return this.columnSTA_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public STAFFRow this[int index] {
                get {
                    return ((STAFFRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event STAFFRowChangeEventHandler STAFFRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event STAFFRowChangeEventHandler STAFFRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event STAFFRowChangeEventHandler STAFFRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event STAFFRowChangeEventHandler STAFFRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSTAFFRow(STAFFRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public STAFFRow AddSTAFFRow(HUMANRow parentHUMANRowBySTAFF_FK1) {
                STAFFRow rowSTAFFRow = ((STAFFRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null};
                if ((parentHUMANRowBySTAFF_FK1 != null)) {
                    columnValuesArray[0] = parentHUMANRowBySTAFF_FK1[0];
                }
                rowSTAFFRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSTAFFRow);
                return rowSTAFFRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public STAFFRow FindBySTA_ID(string STA_ID) {
                return ((STAFFRow)(this.Rows.Find(new object[] {
                            STA_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                STAFFDataTable cln = ((STAFFDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new STAFFDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnSTA_ID = base.Columns["STA_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnSTA_ID = new global::System.Data.DataColumn("STA_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTA_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSTA_ID}, true));
                this.columnSTA_ID.AllowDBNull = false;
                this.columnSTA_ID.Unique = true;
                this.columnSTA_ID.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public STAFFRow NewSTAFFRow() {
                return ((STAFFRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new STAFFRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(STAFFRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.STAFFRowChanged != null)) {
                    this.STAFFRowChanged(this, new STAFFRowChangeEvent(((STAFFRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.STAFFRowChanging != null)) {
                    this.STAFFRowChanging(this, new STAFFRowChangeEvent(((STAFFRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.STAFFRowDeleted != null)) {
                    this.STAFFRowDeleted(this, new STAFFRowChangeEvent(((STAFFRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.STAFFRowDeleting != null)) {
                    this.STAFFRowDeleting(this, new STAFFRowChangeEvent(((STAFFRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSTAFFRow(STAFFRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "STAFFDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RENTALDataTable : global::System.Data.TypedTableBase<RENTALRow> {
            
            private global::System.Data.DataColumn columnREN_NO;
            
            private global::System.Data.DataColumn columnREN_TIME;
            
            private global::System.Data.DataColumn columnRET_TIME;
            
            private global::System.Data.DataColumn columnCLO_ID;
            
            private global::System.Data.DataColumn columnCUS_ID;
            
            private global::System.Data.DataColumn columnSTA_ID;
            
            private global::System.Data.DataColumn columnRET_ID;
            
            private global::System.Data.DataColumn columnGRADE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RENTALDataTable() {
                this.TableName = "RENTAL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal RENTALDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected RENTALDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn REN_NOColumn {
                get {
                    return this.columnREN_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn REN_TIMEColumn {
                get {
                    return this.columnREN_TIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RET_TIMEColumn {
                get {
                    return this.columnRET_TIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CLO_IDColumn {
                get {
                    return this.columnCLO_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CUS_IDColumn {
                get {
                    return this.columnCUS_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STA_IDColumn {
                get {
                    return this.columnSTA_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RET_IDColumn {
                get {
                    return this.columnRET_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GRADEColumn {
                get {
                    return this.columnGRADE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RENTALRow this[int index] {
                get {
                    return ((RENTALRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RENTALRowChangeEventHandler RENTALRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RENTALRowChangeEventHandler RENTALRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RENTALRowChangeEventHandler RENTALRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RENTALRowChangeEventHandler RENTALRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddRENTALRow(RENTALRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RENTALRow AddRENTALRow(string REN_NO, string REN_TIME, string RET_TIME, CLOTHESRow parentCLOTHESRowByRENTAL_FK1, CUSTOMERRow parentCUSTOMERRowByRENTAL_FK2, STAFFRow parentSTAFFRowByRENTAL_FK3, STAFFRow parentSTAFFRowByRENTAL_FK4, string GRADE) {
                RENTALRow rowRENTALRow = ((RENTALRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        REN_NO,
                        REN_TIME,
                        RET_TIME,
                        null,
                        null,
                        null,
                        null,
                        GRADE};
                if ((parentCLOTHESRowByRENTAL_FK1 != null)) {
                    columnValuesArray[3] = parentCLOTHESRowByRENTAL_FK1[0];
                }
                if ((parentCUSTOMERRowByRENTAL_FK2 != null)) {
                    columnValuesArray[4] = parentCUSTOMERRowByRENTAL_FK2[0];
                }
                if ((parentSTAFFRowByRENTAL_FK3 != null)) {
                    columnValuesArray[5] = parentSTAFFRowByRENTAL_FK3[0];
                }
                if ((parentSTAFFRowByRENTAL_FK4 != null)) {
                    columnValuesArray[6] = parentSTAFFRowByRENTAL_FK4[0];
                }
                rowRENTALRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRENTALRow);
                return rowRENTALRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RENTALRow FindByREN_NO(string REN_NO) {
                return ((RENTALRow)(this.Rows.Find(new object[] {
                            REN_NO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                RENTALDataTable cln = ((RENTALDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RENTALDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnREN_NO = base.Columns["REN_NO"];
                this.columnREN_TIME = base.Columns["REN_TIME"];
                this.columnRET_TIME = base.Columns["RET_TIME"];
                this.columnCLO_ID = base.Columns["CLO_ID"];
                this.columnCUS_ID = base.Columns["CUS_ID"];
                this.columnSTA_ID = base.Columns["STA_ID"];
                this.columnRET_ID = base.Columns["RET_ID"];
                this.columnGRADE = base.Columns["GRADE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnREN_NO = new global::System.Data.DataColumn("REN_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREN_NO);
                this.columnREN_TIME = new global::System.Data.DataColumn("REN_TIME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREN_TIME);
                this.columnRET_TIME = new global::System.Data.DataColumn("RET_TIME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRET_TIME);
                this.columnCLO_ID = new global::System.Data.DataColumn("CLO_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCLO_ID);
                this.columnCUS_ID = new global::System.Data.DataColumn("CUS_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUS_ID);
                this.columnSTA_ID = new global::System.Data.DataColumn("STA_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTA_ID);
                this.columnRET_ID = new global::System.Data.DataColumn("RET_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRET_ID);
                this.columnGRADE = new global::System.Data.DataColumn("GRADE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGRADE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnREN_NO}, true));
                this.columnREN_NO.AllowDBNull = false;
                this.columnREN_NO.Unique = true;
                this.columnREN_NO.MaxLength = 50;
                this.columnREN_TIME.MaxLength = 50;
                this.columnRET_TIME.MaxLength = 50;
                this.columnCLO_ID.MaxLength = 50;
                this.columnCUS_ID.MaxLength = 50;
                this.columnSTA_ID.MaxLength = 50;
                this.columnRET_ID.MaxLength = 50;
                this.columnGRADE.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RENTALRow NewRENTALRow() {
                return ((RENTALRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RENTALRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(RENTALRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RENTALRowChanged != null)) {
                    this.RENTALRowChanged(this, new RENTALRowChangeEvent(((RENTALRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RENTALRowChanging != null)) {
                    this.RENTALRowChanging(this, new RENTALRowChangeEvent(((RENTALRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RENTALRowDeleted != null)) {
                    this.RENTALRowDeleted(this, new RENTALRowChangeEvent(((RENTALRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RENTALRowDeleting != null)) {
                    this.RENTALRowDeleting(this, new RENTALRowChangeEvent(((RENTALRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveRENTALRow(RENTALRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RENTALDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RESERVATIONDataTable : global::System.Data.TypedTableBase<RESERVATIONRow> {
            
            private global::System.Data.DataColumn columnRES_NO;
            
            private global::System.Data.DataColumn columnCUS_ID;
            
            private global::System.Data.DataColumn columnCLO_ID;
            
            private global::System.Data.DataColumn columnRES_TIME;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RESERVATIONDataTable() {
                this.TableName = "RESERVATION";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal RESERVATIONDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected RESERVATIONDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RES_NOColumn {
                get {
                    return this.columnRES_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CUS_IDColumn {
                get {
                    return this.columnCUS_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CLO_IDColumn {
                get {
                    return this.columnCLO_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RES_TIMEColumn {
                get {
                    return this.columnRES_TIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RESERVATIONRow this[int index] {
                get {
                    return ((RESERVATIONRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RESERVATIONRowChangeEventHandler RESERVATIONRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RESERVATIONRowChangeEventHandler RESERVATIONRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RESERVATIONRowChangeEventHandler RESERVATIONRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RESERVATIONRowChangeEventHandler RESERVATIONRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddRESERVATIONRow(RESERVATIONRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RESERVATIONRow AddRESERVATIONRow(string RES_NO, CUSTOMERRow parentCUSTOMERRowByRESERVATION_FK2, CLOTHESRow parentCLOTHESRowByRESERVATION_FK1, string RES_TIME) {
                RESERVATIONRow rowRESERVATIONRow = ((RESERVATIONRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RES_NO,
                        null,
                        null,
                        RES_TIME};
                if ((parentCUSTOMERRowByRESERVATION_FK2 != null)) {
                    columnValuesArray[1] = parentCUSTOMERRowByRESERVATION_FK2[0];
                }
                if ((parentCLOTHESRowByRESERVATION_FK1 != null)) {
                    columnValuesArray[2] = parentCLOTHESRowByRESERVATION_FK1[0];
                }
                rowRESERVATIONRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRESERVATIONRow);
                return rowRESERVATIONRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RESERVATIONRow FindByRES_NO(string RES_NO) {
                return ((RESERVATIONRow)(this.Rows.Find(new object[] {
                            RES_NO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                RESERVATIONDataTable cln = ((RESERVATIONDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RESERVATIONDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnRES_NO = base.Columns["RES_NO"];
                this.columnCUS_ID = base.Columns["CUS_ID"];
                this.columnCLO_ID = base.Columns["CLO_ID"];
                this.columnRES_TIME = base.Columns["RES_TIME"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnRES_NO = new global::System.Data.DataColumn("RES_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRES_NO);
                this.columnCUS_ID = new global::System.Data.DataColumn("CUS_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUS_ID);
                this.columnCLO_ID = new global::System.Data.DataColumn("CLO_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCLO_ID);
                this.columnRES_TIME = new global::System.Data.DataColumn("RES_TIME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRES_TIME);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRES_NO}, true));
                this.columnRES_NO.AllowDBNull = false;
                this.columnRES_NO.Unique = true;
                this.columnRES_NO.MaxLength = 50;
                this.columnCUS_ID.MaxLength = 50;
                this.columnCLO_ID.MaxLength = 50;
                this.columnRES_TIME.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RESERVATIONRow NewRESERVATIONRow() {
                return ((RESERVATIONRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RESERVATIONRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(RESERVATIONRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RESERVATIONRowChanged != null)) {
                    this.RESERVATIONRowChanged(this, new RESERVATIONRowChangeEvent(((RESERVATIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RESERVATIONRowChanging != null)) {
                    this.RESERVATIONRowChanging(this, new RESERVATIONRowChangeEvent(((RESERVATIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RESERVATIONRowDeleted != null)) {
                    this.RESERVATIONRowDeleted(this, new RESERVATIONRowChangeEvent(((RESERVATIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RESERVATIONRowDeleting != null)) {
                    this.RESERVATIONRowDeleting(this, new RESERVATIONRowChangeEvent(((RESERVATIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveRESERVATIONRow(RESERVATIONRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RESERVATIONDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class REVIEWDataTable : global::System.Data.TypedTableBase<REVIEWRow> {
            
            private global::System.Data.DataColumn columnREV_NO;
            
            private global::System.Data.DataColumn columnREN_NO;
            
            private global::System.Data.DataColumn columnCOMMENTS;
            
            private global::System.Data.DataColumn columnTITLE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public REVIEWDataTable() {
                this.TableName = "REVIEW";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal REVIEWDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected REVIEWDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn REV_NOColumn {
                get {
                    return this.columnREV_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn REN_NOColumn {
                get {
                    return this.columnREN_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COMMENTSColumn {
                get {
                    return this.columnCOMMENTS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TITLEColumn {
                get {
                    return this.columnTITLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public REVIEWRow this[int index] {
                get {
                    return ((REVIEWRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event REVIEWRowChangeEventHandler REVIEWRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event REVIEWRowChangeEventHandler REVIEWRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event REVIEWRowChangeEventHandler REVIEWRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event REVIEWRowChangeEventHandler REVIEWRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddREVIEWRow(REVIEWRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public REVIEWRow AddREVIEWRow(string REV_NO, RENTALRow parentRENTALRowByREVIEW_FK1, string COMMENTS, string TITLE) {
                REVIEWRow rowREVIEWRow = ((REVIEWRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        REV_NO,
                        null,
                        COMMENTS,
                        TITLE};
                if ((parentRENTALRowByREVIEW_FK1 != null)) {
                    columnValuesArray[1] = parentRENTALRowByREVIEW_FK1[0];
                }
                rowREVIEWRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowREVIEWRow);
                return rowREVIEWRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public REVIEWRow FindByREV_NOREN_NO(string REV_NO, string REN_NO) {
                return ((REVIEWRow)(this.Rows.Find(new object[] {
                            REV_NO,
                            REN_NO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                REVIEWDataTable cln = ((REVIEWDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new REVIEWDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnREV_NO = base.Columns["REV_NO"];
                this.columnREN_NO = base.Columns["REN_NO"];
                this.columnCOMMENTS = base.Columns["COMMENTS"];
                this.columnTITLE = base.Columns["TITLE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnREV_NO = new global::System.Data.DataColumn("REV_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREV_NO);
                this.columnREN_NO = new global::System.Data.DataColumn("REN_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREN_NO);
                this.columnCOMMENTS = new global::System.Data.DataColumn("COMMENTS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMMENTS);
                this.columnTITLE = new global::System.Data.DataColumn("TITLE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTITLE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnREV_NO,
                                this.columnREN_NO}, true));
                this.columnREV_NO.AllowDBNull = false;
                this.columnREV_NO.MaxLength = 50;
                this.columnREN_NO.AllowDBNull = false;
                this.columnREN_NO.MaxLength = 50;
                this.columnCOMMENTS.MaxLength = 200;
                this.columnTITLE.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public REVIEWRow NewREVIEWRow() {
                return ((REVIEWRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new REVIEWRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(REVIEWRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.REVIEWRowChanged != null)) {
                    this.REVIEWRowChanged(this, new REVIEWRowChangeEvent(((REVIEWRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.REVIEWRowChanging != null)) {
                    this.REVIEWRowChanging(this, new REVIEWRowChangeEvent(((REVIEWRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.REVIEWRowDeleted != null)) {
                    this.REVIEWRowDeleted(this, new REVIEWRowChangeEvent(((REVIEWRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.REVIEWRowDeleting != null)) {
                    this.REVIEWRowDeleting(this, new REVIEWRowChangeEvent(((REVIEWRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveREVIEWRow(REVIEWRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "REVIEWDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DataTable1DataTable : global::System.Data.TypedTableBase<DataTable1Row> {
            
            private global::System.Data.DataColumn columnREN_NO;
            
            private global::System.Data.DataColumn columnREN_TIME;
            
            private global::System.Data.DataColumn columnRET_TIME;
            
            private global::System.Data.DataColumn columnCLO_ID;
            
            private global::System.Data.DataColumn columnCUS_ID;
            
            private global::System.Data.DataColumn columnSTA_ID;
            
            private global::System.Data.DataColumn columnCLO_NAME;
            
            private global::System.Data.DataColumn columnCUS_NAME;
            
            private global::System.Data.DataColumn columnRET_ID;
            
            private global::System.Data.DataColumn columnGRADE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable1DataTable() {
                this.TableName = "DataTable1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DataTable1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected DataTable1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn REN_NOColumn {
                get {
                    return this.columnREN_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn REN_TIMEColumn {
                get {
                    return this.columnREN_TIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RET_TIMEColumn {
                get {
                    return this.columnRET_TIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CLO_IDColumn {
                get {
                    return this.columnCLO_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CUS_IDColumn {
                get {
                    return this.columnCUS_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STA_IDColumn {
                get {
                    return this.columnSTA_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CLO_NAMEColumn {
                get {
                    return this.columnCLO_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CUS_NAMEColumn {
                get {
                    return this.columnCUS_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RET_IDColumn {
                get {
                    return this.columnRET_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GRADEColumn {
                get {
                    return this.columnGRADE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable1Row this[int index] {
                get {
                    return ((DataTable1Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataTable1RowChangeEventHandler DataTable1RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataTable1RowChangeEventHandler DataTable1RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataTable1RowChangeEventHandler DataTable1RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataTable1RowChangeEventHandler DataTable1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddDataTable1Row(DataTable1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable1Row AddDataTable1Row(string REN_NO, string REN_TIME, string RET_TIME, string CLO_ID, string CUS_ID, string STA_ID, string CLO_NAME, string CUS_NAME, string RET_ID, PAYRow parentPAYRowByCLOTHES_FK21) {
                DataTable1Row rowDataTable1Row = ((DataTable1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        REN_NO,
                        REN_TIME,
                        RET_TIME,
                        CLO_ID,
                        CUS_ID,
                        STA_ID,
                        CLO_NAME,
                        CUS_NAME,
                        RET_ID,
                        null};
                if ((parentPAYRowByCLOTHES_FK21 != null)) {
                    columnValuesArray[9] = parentPAYRowByCLOTHES_FK21[0];
                }
                rowDataTable1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowDataTable1Row);
                return rowDataTable1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DataTable1DataTable cln = ((DataTable1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DataTable1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnREN_NO = base.Columns["REN_NO"];
                this.columnREN_TIME = base.Columns["REN_TIME"];
                this.columnRET_TIME = base.Columns["RET_TIME"];
                this.columnCLO_ID = base.Columns["CLO_ID"];
                this.columnCUS_ID = base.Columns["CUS_ID"];
                this.columnSTA_ID = base.Columns["STA_ID"];
                this.columnCLO_NAME = base.Columns["CLO_NAME"];
                this.columnCUS_NAME = base.Columns["CUS_NAME"];
                this.columnRET_ID = base.Columns["RET_ID"];
                this.columnGRADE = base.Columns["GRADE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnREN_NO = new global::System.Data.DataColumn("REN_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREN_NO);
                this.columnREN_TIME = new global::System.Data.DataColumn("REN_TIME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREN_TIME);
                this.columnRET_TIME = new global::System.Data.DataColumn("RET_TIME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRET_TIME);
                this.columnCLO_ID = new global::System.Data.DataColumn("CLO_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCLO_ID);
                this.columnCUS_ID = new global::System.Data.DataColumn("CUS_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUS_ID);
                this.columnSTA_ID = new global::System.Data.DataColumn("STA_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTA_ID);
                this.columnCLO_NAME = new global::System.Data.DataColumn("CLO_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCLO_NAME);
                this.columnCUS_NAME = new global::System.Data.DataColumn("CUS_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUS_NAME);
                this.columnRET_ID = new global::System.Data.DataColumn("RET_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRET_ID);
                this.columnGRADE = new global::System.Data.DataColumn("GRADE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGRADE);
                this.columnREN_NO.ReadOnly = true;
                this.columnREN_NO.MaxLength = 50;
                this.columnREN_TIME.ReadOnly = true;
                this.columnREN_TIME.MaxLength = 50;
                this.columnRET_TIME.ReadOnly = true;
                this.columnRET_TIME.MaxLength = 50;
                this.columnCLO_ID.ReadOnly = true;
                this.columnCLO_ID.MaxLength = 50;
                this.columnCUS_ID.ReadOnly = true;
                this.columnCUS_ID.MaxLength = 50;
                this.columnSTA_ID.ReadOnly = true;
                this.columnSTA_ID.MaxLength = 50;
                this.columnCLO_NAME.ReadOnly = true;
                this.columnCLO_NAME.MaxLength = 50;
                this.columnCUS_NAME.ReadOnly = true;
                this.columnCUS_NAME.MaxLength = 20;
                this.columnRET_ID.ReadOnly = true;
                this.columnRET_ID.MaxLength = 50;
                this.columnGRADE.ReadOnly = true;
                this.columnGRADE.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable1Row NewDataTable1Row() {
                return ((DataTable1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DataTable1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DataTable1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DataTable1RowChanged != null)) {
                    this.DataTable1RowChanged(this, new DataTable1RowChangeEvent(((DataTable1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DataTable1RowChanging != null)) {
                    this.DataTable1RowChanging(this, new DataTable1RowChangeEvent(((DataTable1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DataTable1RowDeleted != null)) {
                    this.DataTable1RowDeleted(this, new DataTable1RowChangeEvent(((DataTable1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DataTable1RowDeleting != null)) {
                    this.DataTable1RowDeleting(this, new DataTable1RowChangeEvent(((DataTable1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveDataTable1Row(DataTable1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DataTable1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DataTable2DataTable : global::System.Data.TypedTableBase<DataTable2Row> {
            
            private global::System.Data.DataColumn columnRES_NO;
            
            private global::System.Data.DataColumn columnCUS_ID;
            
            private global::System.Data.DataColumn columnCLO_ID;
            
            private global::System.Data.DataColumn columnRES_TIME;
            
            private global::System.Data.DataColumn columnCLO_NAME;
            
            private global::System.Data.DataColumn columnCUS_NAME;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable2DataTable() {
                this.TableName = "DataTable2";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DataTable2DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected DataTable2DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RES_NOColumn {
                get {
                    return this.columnRES_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CUS_IDColumn {
                get {
                    return this.columnCUS_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CLO_IDColumn {
                get {
                    return this.columnCLO_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RES_TIMEColumn {
                get {
                    return this.columnRES_TIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CLO_NAMEColumn {
                get {
                    return this.columnCLO_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CUS_NAMEColumn {
                get {
                    return this.columnCUS_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable2Row this[int index] {
                get {
                    return ((DataTable2Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataTable2RowChangeEventHandler DataTable2RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataTable2RowChangeEventHandler DataTable2RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataTable2RowChangeEventHandler DataTable2RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataTable2RowChangeEventHandler DataTable2RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddDataTable2Row(DataTable2Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable2Row AddDataTable2Row(string RES_NO, string CUS_ID, string CLO_ID, string RES_TIME, string CLO_NAME, string CUS_NAME) {
                DataTable2Row rowDataTable2Row = ((DataTable2Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RES_NO,
                        CUS_ID,
                        CLO_ID,
                        RES_TIME,
                        CLO_NAME,
                        CUS_NAME};
                rowDataTable2Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowDataTable2Row);
                return rowDataTable2Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DataTable2DataTable cln = ((DataTable2DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DataTable2DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnRES_NO = base.Columns["RES_NO"];
                this.columnCUS_ID = base.Columns["CUS_ID"];
                this.columnCLO_ID = base.Columns["CLO_ID"];
                this.columnRES_TIME = base.Columns["RES_TIME"];
                this.columnCLO_NAME = base.Columns["CLO_NAME"];
                this.columnCUS_NAME = base.Columns["CUS_NAME"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnRES_NO = new global::System.Data.DataColumn("RES_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRES_NO);
                this.columnCUS_ID = new global::System.Data.DataColumn("CUS_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUS_ID);
                this.columnCLO_ID = new global::System.Data.DataColumn("CLO_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCLO_ID);
                this.columnRES_TIME = new global::System.Data.DataColumn("RES_TIME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRES_TIME);
                this.columnCLO_NAME = new global::System.Data.DataColumn("CLO_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCLO_NAME);
                this.columnCUS_NAME = new global::System.Data.DataColumn("CUS_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUS_NAME);
                this.columnRES_NO.ReadOnly = true;
                this.columnRES_NO.MaxLength = 50;
                this.columnCUS_ID.ReadOnly = true;
                this.columnCUS_ID.MaxLength = 50;
                this.columnCLO_ID.ReadOnly = true;
                this.columnCLO_ID.MaxLength = 50;
                this.columnRES_TIME.ReadOnly = true;
                this.columnRES_TIME.MaxLength = 50;
                this.columnCLO_NAME.ReadOnly = true;
                this.columnCLO_NAME.MaxLength = 50;
                this.columnCUS_NAME.ReadOnly = true;
                this.columnCUS_NAME.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable2Row NewDataTable2Row() {
                return ((DataTable2Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DataTable2Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DataTable2Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DataTable2RowChanged != null)) {
                    this.DataTable2RowChanged(this, new DataTable2RowChangeEvent(((DataTable2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DataTable2RowChanging != null)) {
                    this.DataTable2RowChanging(this, new DataTable2RowChangeEvent(((DataTable2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DataTable2RowDeleted != null)) {
                    this.DataTable2RowDeleted(this, new DataTable2RowChangeEvent(((DataTable2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DataTable2RowDeleting != null)) {
                    this.DataTable2RowDeleting(this, new DataTable2RowChangeEvent(((DataTable2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveDataTable2Row(DataTable2Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DataTable2DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LATEFEEDataTable : global::System.Data.TypedTableBase<LATEFEERow> {
            
            private global::System.Data.DataColumn columnLAT_NO;
            
            private global::System.Data.DataColumn columnCUS_ID;
            
            private global::System.Data.DataColumn columnLAT_TIME;
            
            private global::System.Data.DataColumn columnLAT_FEE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LATEFEEDataTable() {
                this.TableName = "LATEFEE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal LATEFEEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected LATEFEEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LAT_NOColumn {
                get {
                    return this.columnLAT_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CUS_IDColumn {
                get {
                    return this.columnCUS_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LAT_TIMEColumn {
                get {
                    return this.columnLAT_TIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LAT_FEEColumn {
                get {
                    return this.columnLAT_FEE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LATEFEERow this[int index] {
                get {
                    return ((LATEFEERow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LATEFEERowChangeEventHandler LATEFEERowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LATEFEERowChangeEventHandler LATEFEERowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LATEFEERowChangeEventHandler LATEFEERowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LATEFEERowChangeEventHandler LATEFEERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddLATEFEERow(LATEFEERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LATEFEERow AddLATEFEERow(string LAT_NO, CUSTOMERRow parentCUSTOMERRowByLATEFEE_FK1, string LAT_TIME, string LAT_FEE) {
                LATEFEERow rowLATEFEERow = ((LATEFEERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        LAT_NO,
                        null,
                        LAT_TIME,
                        LAT_FEE};
                if ((parentCUSTOMERRowByLATEFEE_FK1 != null)) {
                    columnValuesArray[1] = parentCUSTOMERRowByLATEFEE_FK1[0];
                }
                rowLATEFEERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLATEFEERow);
                return rowLATEFEERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LATEFEERow FindByLAT_NO(string LAT_NO) {
                return ((LATEFEERow)(this.Rows.Find(new object[] {
                            LAT_NO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                LATEFEEDataTable cln = ((LATEFEEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LATEFEEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnLAT_NO = base.Columns["LAT_NO"];
                this.columnCUS_ID = base.Columns["CUS_ID"];
                this.columnLAT_TIME = base.Columns["LAT_TIME"];
                this.columnLAT_FEE = base.Columns["LAT_FEE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnLAT_NO = new global::System.Data.DataColumn("LAT_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLAT_NO);
                this.columnCUS_ID = new global::System.Data.DataColumn("CUS_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUS_ID);
                this.columnLAT_TIME = new global::System.Data.DataColumn("LAT_TIME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLAT_TIME);
                this.columnLAT_FEE = new global::System.Data.DataColumn("LAT_FEE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLAT_FEE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnLAT_NO}, true));
                this.columnLAT_NO.AllowDBNull = false;
                this.columnLAT_NO.Unique = true;
                this.columnLAT_NO.MaxLength = 20;
                this.columnCUS_ID.MaxLength = 20;
                this.columnLAT_TIME.MaxLength = 20;
                this.columnLAT_FEE.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LATEFEERow NewLATEFEERow() {
                return ((LATEFEERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LATEFEERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(LATEFEERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LATEFEERowChanged != null)) {
                    this.LATEFEERowChanged(this, new LATEFEERowChangeEvent(((LATEFEERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LATEFEERowChanging != null)) {
                    this.LATEFEERowChanging(this, new LATEFEERowChangeEvent(((LATEFEERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LATEFEERowDeleted != null)) {
                    this.LATEFEERowDeleted(this, new LATEFEERowChangeEvent(((LATEFEERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LATEFEERowDeleting != null)) {
                    this.LATEFEERowDeleting(this, new LATEFEERowChangeEvent(((LATEFEERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveLATEFEERow(LATEFEERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LATEFEEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class HUMANRow : global::System.Data.DataRow {
            
            private HUMANDataTable tableHUMAN;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal HUMANRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableHUMAN = ((HUMANDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ID {
                get {
                    return ((string)(this[this.tableHUMAN.IDColumn]));
                }
                set {
                    this[this.tableHUMAN.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PASSWORD {
                get {
                    return ((string)(this[this.tableHUMAN.PASSWORDColumn]));
                }
                set {
                    this[this.tableHUMAN.PASSWORDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ROLE {
                get {
                    return ((string)(this[this.tableHUMAN.ROLEColumn]));
                }
                set {
                    this[this.tableHUMAN.ROLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CUSTOMERRow[] GetCUSTOMERRows() {
                if ((this.Table.ChildRelations["CUSTOMER_FK1"] == null)) {
                    return new CUSTOMERRow[0];
                }
                else {
                    return ((CUSTOMERRow[])(base.GetChildRows(this.Table.ChildRelations["CUSTOMER_FK1"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MANAGERRow[] GetMANAGERRows() {
                if ((this.Table.ChildRelations["MANAGER_FK1"] == null)) {
                    return new MANAGERRow[0];
                }
                else {
                    return ((MANAGERRow[])(base.GetChildRows(this.Table.ChildRelations["MANAGER_FK1"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public STAFFRow[] GetSTAFFRows() {
                if ((this.Table.ChildRelations["STAFF_FK1"] == null)) {
                    return new STAFFRow[0];
                }
                else {
                    return ((STAFFRow[])(base.GetChildRows(this.Table.ChildRelations["STAFF_FK1"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class BLACKLISTRow : global::System.Data.DataRow {
            
            private BLACKLISTDataTable tableBLACKLIST;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal BLACKLISTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBLACKLIST = ((BLACKLISTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CUS_ID {
                get {
                    return ((string)(this[this.tableBLACKLIST.CUS_IDColumn]));
                }
                set {
                    this[this.tableBLACKLIST.CUS_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string REASON {
                get {
                    try {
                        return ((string)(this[this.tableBLACKLIST.REASONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'BLACKLIST\' 테이블의 \'REASON\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableBLACKLIST.REASONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CUSTOMERRow CUSTOMERRow {
                get {
                    return ((CUSTOMERRow)(this.GetParentRow(this.Table.ParentRelations["BLACKLIST_FK1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["BLACKLIST_FK1"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsREASONNull() {
                return this.IsNull(this.tableBLACKLIST.REASONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetREASONNull() {
                this[this.tableBLACKLIST.REASONColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class CATEGORYRow : global::System.Data.DataRow {
            
            private CATEGORYDataTable tableCATEGORY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CATEGORYRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCATEGORY = ((CATEGORYDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CAT_ID {
                get {
                    return ((string)(this[this.tableCATEGORY.CAT_IDColumn]));
                }
                set {
                    this[this.tableCATEGORY.CAT_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CAT_NAME {
                get {
                    try {
                        return ((string)(this[this.tableCATEGORY.CAT_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'CATEGORY\' 테이블의 \'CAT_NAME\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableCATEGORY.CAT_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCAT_NAMENull() {
                return this.IsNull(this.tableCATEGORY.CAT_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCAT_NAMENull() {
                this[this.tableCATEGORY.CAT_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CLOTHESRow[] GetCLOTHESRows() {
                if ((this.Table.ChildRelations["CLOTHES_FK1"] == null)) {
                    return new CLOTHESRow[0];
                }
                else {
                    return ((CLOTHESRow[])(base.GetChildRows(this.Table.ChildRelations["CLOTHES_FK1"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class CLOTHESRow : global::System.Data.DataRow {
            
            private CLOTHESDataTable tableCLOTHES;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CLOTHESRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCLOTHES = ((CLOTHESDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CLO_ID {
                get {
                    return ((string)(this[this.tableCLOTHES.CLO_IDColumn]));
                }
                set {
                    this[this.tableCLOTHES.CLO_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CLO_NAME {
                get {
                    try {
                        return ((string)(this[this.tableCLOTHES.CLO_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'CLOTHES\' 테이블의 \'CLO_NAME\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableCLOTHES.CLO_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CLO_BRAND {
                get {
                    try {
                        return ((string)(this[this.tableCLOTHES.CLO_BRANDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'CLOTHES\' 테이블의 \'CLO_BRAND\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableCLOTHES.CLO_BRANDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CLO_SIZE {
                get {
                    try {
                        return ((string)(this[this.tableCLOTHES.CLO_SIZEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'CLOTHES\' 테이블의 \'CLO_SIZE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableCLOTHES.CLO_SIZEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CLO_COLOR {
                get {
                    try {
                        return ((string)(this[this.tableCLOTHES.CLO_COLORColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'CLOTHES\' 테이블의 \'CLO_COLOR\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableCLOTHES.CLO_COLORColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CLO_LOCATION {
                get {
                    try {
                        return ((string)(this[this.tableCLOTHES.CLO_LOCATIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'CLOTHES\' 테이블의 \'CLO_LOCATION\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableCLOTHES.CLO_LOCATIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CLO_RETURNDAY {
                get {
                    try {
                        return ((string)(this[this.tableCLOTHES.CLO_RETURNDAYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'CLOTHES\' 테이블의 \'CLO_RETURNDAY\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableCLOTHES.CLO_RETURNDAYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CLO_RENTAL {
                get {
                    try {
                        return ((string)(this[this.tableCLOTHES.CLO_RENTALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'CLOTHES\' 테이블의 \'CLO_RENTAL\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableCLOTHES.CLO_RENTALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CLO_RESERVATION {
                get {
                    try {
                        return ((string)(this[this.tableCLOTHES.CLO_RESERVATIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'CLOTHES\' 테이블의 \'CLO_RESERVATION\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableCLOTHES.CLO_RESERVATIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CAT_ID {
                get {
                    try {
                        return ((string)(this[this.tableCLOTHES.CAT_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'CLOTHES\' 테이블의 \'CAT_ID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableCLOTHES.CAT_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GRADE {
                get {
                    try {
                        return ((string)(this[this.tableCLOTHES.GRADEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'CLOTHES\' 테이블의 \'GRADE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableCLOTHES.GRADEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CATEGORYRow CATEGORYRow {
                get {
                    return ((CATEGORYRow)(this.GetParentRow(this.Table.ParentRelations["CLOTHES_FK1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["CLOTHES_FK1"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PAYRow PAYRow {
                get {
                    return ((PAYRow)(this.GetParentRow(this.Table.ParentRelations["CLOTHES_FK2"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["CLOTHES_FK2"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCLO_NAMENull() {
                return this.IsNull(this.tableCLOTHES.CLO_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCLO_NAMENull() {
                this[this.tableCLOTHES.CLO_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCLO_BRANDNull() {
                return this.IsNull(this.tableCLOTHES.CLO_BRANDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCLO_BRANDNull() {
                this[this.tableCLOTHES.CLO_BRANDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCLO_SIZENull() {
                return this.IsNull(this.tableCLOTHES.CLO_SIZEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCLO_SIZENull() {
                this[this.tableCLOTHES.CLO_SIZEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCLO_COLORNull() {
                return this.IsNull(this.tableCLOTHES.CLO_COLORColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCLO_COLORNull() {
                this[this.tableCLOTHES.CLO_COLORColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCLO_LOCATIONNull() {
                return this.IsNull(this.tableCLOTHES.CLO_LOCATIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCLO_LOCATIONNull() {
                this[this.tableCLOTHES.CLO_LOCATIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCLO_RETURNDAYNull() {
                return this.IsNull(this.tableCLOTHES.CLO_RETURNDAYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCLO_RETURNDAYNull() {
                this[this.tableCLOTHES.CLO_RETURNDAYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCLO_RENTALNull() {
                return this.IsNull(this.tableCLOTHES.CLO_RENTALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCLO_RENTALNull() {
                this[this.tableCLOTHES.CLO_RENTALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCLO_RESERVATIONNull() {
                return this.IsNull(this.tableCLOTHES.CLO_RESERVATIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCLO_RESERVATIONNull() {
                this[this.tableCLOTHES.CLO_RESERVATIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCAT_IDNull() {
                return this.IsNull(this.tableCLOTHES.CAT_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCAT_IDNull() {
                this[this.tableCLOTHES.CAT_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGRADENull() {
                return this.IsNull(this.tableCLOTHES.GRADEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGRADENull() {
                this[this.tableCLOTHES.GRADEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RENTALRow[] GetRENTALRows() {
                if ((this.Table.ChildRelations["RENTAL_FK1"] == null)) {
                    return new RENTALRow[0];
                }
                else {
                    return ((RENTALRow[])(base.GetChildRows(this.Table.ChildRelations["RENTAL_FK1"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RESERVATIONRow[] GetRESERVATIONRows() {
                if ((this.Table.ChildRelations["RESERVATION_FK1"] == null)) {
                    return new RESERVATIONRow[0];
                }
                else {
                    return ((RESERVATIONRow[])(base.GetChildRows(this.Table.ChildRelations["RESERVATION_FK1"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class CUSTOMERRow : global::System.Data.DataRow {
            
            private CUSTOMERDataTable tableCUSTOMER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CUSTOMERRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCUSTOMER = ((CUSTOMERDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CUS_ID {
                get {
                    return ((string)(this[this.tableCUSTOMER.CUS_IDColumn]));
                }
                set {
                    this[this.tableCUSTOMER.CUS_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CUS_NAME {
                get {
                    return ((string)(this[this.tableCUSTOMER.CUS_NAMEColumn]));
                }
                set {
                    this[this.tableCUSTOMER.CUS_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CUS_CALL {
                get {
                    return ((string)(this[this.tableCUSTOMER.CUS_CALLColumn]));
                }
                set {
                    this[this.tableCUSTOMER.CUS_CALLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CUS_MAIL {
                get {
                    return ((string)(this[this.tableCUSTOMER.CUS_MAILColumn]));
                }
                set {
                    this[this.tableCUSTOMER.CUS_MAILColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CUS_FEE {
                get {
                    try {
                        return ((string)(this[this.tableCUSTOMER.CUS_FEEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'CUSTOMER\' 테이블의 \'CUS_FEE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableCUSTOMER.CUS_FEEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public HUMANRow HUMANRow {
                get {
                    return ((HUMANRow)(this.GetParentRow(this.Table.ParentRelations["CUSTOMER_FK1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["CUSTOMER_FK1"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCUS_FEENull() {
                return this.IsNull(this.tableCUSTOMER.CUS_FEEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCUS_FEENull() {
                this[this.tableCUSTOMER.CUS_FEEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BLACKLISTRow[] GetBLACKLISTRows() {
                if ((this.Table.ChildRelations["BLACKLIST_FK1"] == null)) {
                    return new BLACKLISTRow[0];
                }
                else {
                    return ((BLACKLISTRow[])(base.GetChildRows(this.Table.ChildRelations["BLACKLIST_FK1"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RENTALRow[] GetRENTALRows() {
                if ((this.Table.ChildRelations["RENTAL_FK2"] == null)) {
                    return new RENTALRow[0];
                }
                else {
                    return ((RENTALRow[])(base.GetChildRows(this.Table.ChildRelations["RENTAL_FK2"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RESERVATIONRow[] GetRESERVATIONRows() {
                if ((this.Table.ChildRelations["RESERVATION_FK2"] == null)) {
                    return new RESERVATIONRow[0];
                }
                else {
                    return ((RESERVATIONRow[])(base.GetChildRows(this.Table.ChildRelations["RESERVATION_FK2"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LATEFEERow[] GetLATEFEERows() {
                if ((this.Table.ChildRelations["LATEFEE_FK1"] == null)) {
                    return new LATEFEERow[0];
                }
                else {
                    return ((LATEFEERow[])(base.GetChildRows(this.Table.ChildRelations["LATEFEE_FK1"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class MANAGERRow : global::System.Data.DataRow {
            
            private MANAGERDataTable tableMANAGER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal MANAGERRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMANAGER = ((MANAGERDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MAN_ID {
                get {
                    return ((string)(this[this.tableMANAGER.MAN_IDColumn]));
                }
                set {
                    this[this.tableMANAGER.MAN_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public HUMANRow HUMANRow {
                get {
                    return ((HUMANRow)(this.GetParentRow(this.Table.ParentRelations["MANAGER_FK1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["MANAGER_FK1"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class PAYRow : global::System.Data.DataRow {
            
            private PAYDataTable tablePAY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PAYRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePAY = ((PAYDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GRADE {
                get {
                    return ((string)(this[this.tablePAY.GRADEColumn]));
                }
                set {
                    this[this.tablePAY.GRADEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FEE {
                get {
                    try {
                        return ((string)(this[this.tablePAY.FEEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'PAY\' 테이블의 \'FEE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tablePAY.FEEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LATEFEE {
                get {
                    try {
                        return ((string)(this[this.tablePAY.LATEFEEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'PAY\' 테이블의 \'LATEFEE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tablePAY.LATEFEEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFEENull() {
                return this.IsNull(this.tablePAY.FEEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFEENull() {
                this[this.tablePAY.FEEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLATEFEENull() {
                return this.IsNull(this.tablePAY.LATEFEEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLATEFEENull() {
                this[this.tablePAY.LATEFEEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CLOTHESRow[] GetCLOTHESRows() {
                if ((this.Table.ChildRelations["CLOTHES_FK2"] == null)) {
                    return new CLOTHESRow[0];
                }
                else {
                    return ((CLOTHESRow[])(base.GetChildRows(this.Table.ChildRelations["CLOTHES_FK2"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable1Row[] GetDataTable1Rows() {
                if ((this.Table.ChildRelations["CLOTHES_FK21"] == null)) {
                    return new DataTable1Row[0];
                }
                else {
                    return ((DataTable1Row[])(base.GetChildRows(this.Table.ChildRelations["CLOTHES_FK21"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class STAFFRow : global::System.Data.DataRow {
            
            private STAFFDataTable tableSTAFF;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal STAFFRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSTAFF = ((STAFFDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string STA_ID {
                get {
                    return ((string)(this[this.tableSTAFF.STA_IDColumn]));
                }
                set {
                    this[this.tableSTAFF.STA_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public HUMANRow HUMANRow {
                get {
                    return ((HUMANRow)(this.GetParentRow(this.Table.ParentRelations["STAFF_FK1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["STAFF_FK1"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RENTALRow[] GetRENTALRows() {
                if ((this.Table.ChildRelations["RENTAL_FK3"] == null)) {
                    return new RENTALRow[0];
                }
                else {
                    return ((RENTALRow[])(base.GetChildRows(this.Table.ChildRelations["RENTAL_FK3"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RENTALRow[] GetRENTALRowsByRENTAL_FK4() {
                if ((this.Table.ChildRelations["RENTAL_FK4"] == null)) {
                    return new RENTALRow[0];
                }
                else {
                    return ((RENTALRow[])(base.GetChildRows(this.Table.ChildRelations["RENTAL_FK4"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class RENTALRow : global::System.Data.DataRow {
            
            private RENTALDataTable tableRENTAL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal RENTALRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRENTAL = ((RENTALDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string REN_NO {
                get {
                    return ((string)(this[this.tableRENTAL.REN_NOColumn]));
                }
                set {
                    this[this.tableRENTAL.REN_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string REN_TIME {
                get {
                    try {
                        return ((string)(this[this.tableRENTAL.REN_TIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'RENTAL\' 테이블의 \'REN_TIME\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableRENTAL.REN_TIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RET_TIME {
                get {
                    try {
                        return ((string)(this[this.tableRENTAL.RET_TIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'RENTAL\' 테이블의 \'RET_TIME\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableRENTAL.RET_TIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CLO_ID {
                get {
                    try {
                        return ((string)(this[this.tableRENTAL.CLO_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'RENTAL\' 테이블의 \'CLO_ID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableRENTAL.CLO_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CUS_ID {
                get {
                    try {
                        return ((string)(this[this.tableRENTAL.CUS_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'RENTAL\' 테이블의 \'CUS_ID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableRENTAL.CUS_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string STA_ID {
                get {
                    try {
                        return ((string)(this[this.tableRENTAL.STA_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'RENTAL\' 테이블의 \'STA_ID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableRENTAL.STA_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RET_ID {
                get {
                    try {
                        return ((string)(this[this.tableRENTAL.RET_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'RENTAL\' 테이블의 \'RET_ID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableRENTAL.RET_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GRADE {
                get {
                    try {
                        return ((string)(this[this.tableRENTAL.GRADEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'RENTAL\' 테이블의 \'GRADE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableRENTAL.GRADEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CLOTHESRow CLOTHESRow {
                get {
                    return ((CLOTHESRow)(this.GetParentRow(this.Table.ParentRelations["RENTAL_FK1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["RENTAL_FK1"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CUSTOMERRow CUSTOMERRow {
                get {
                    return ((CUSTOMERRow)(this.GetParentRow(this.Table.ParentRelations["RENTAL_FK2"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["RENTAL_FK2"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public STAFFRow STAFFRow {
                get {
                    return ((STAFFRow)(this.GetParentRow(this.Table.ParentRelations["RENTAL_FK3"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["RENTAL_FK3"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable1Row DataTable1Row {
                get {
                    return ((DataTable1Row)(this.GetParentRow(this.Table.ParentRelations["RENTAL_FK11"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["RENTAL_FK11"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable2Row DataTable2Row {
                get {
                    return ((DataTable2Row)(this.GetParentRow(this.Table.ParentRelations["RENTAL_FK12"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["RENTAL_FK12"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public STAFFRow STAFFRowByRENTAL_FK4 {
                get {
                    return ((STAFFRow)(this.GetParentRow(this.Table.ParentRelations["RENTAL_FK4"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["RENTAL_FK4"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsREN_TIMENull() {
                return this.IsNull(this.tableRENTAL.REN_TIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetREN_TIMENull() {
                this[this.tableRENTAL.REN_TIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRET_TIMENull() {
                return this.IsNull(this.tableRENTAL.RET_TIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRET_TIMENull() {
                this[this.tableRENTAL.RET_TIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCLO_IDNull() {
                return this.IsNull(this.tableRENTAL.CLO_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCLO_IDNull() {
                this[this.tableRENTAL.CLO_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCUS_IDNull() {
                return this.IsNull(this.tableRENTAL.CUS_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCUS_IDNull() {
                this[this.tableRENTAL.CUS_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSTA_IDNull() {
                return this.IsNull(this.tableRENTAL.STA_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSTA_IDNull() {
                this[this.tableRENTAL.STA_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRET_IDNull() {
                return this.IsNull(this.tableRENTAL.RET_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRET_IDNull() {
                this[this.tableRENTAL.RET_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGRADENull() {
                return this.IsNull(this.tableRENTAL.GRADEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGRADENull() {
                this[this.tableRENTAL.GRADEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public REVIEWRow[] GetREVIEWRows() {
                if ((this.Table.ChildRelations["REVIEW_FK1"] == null)) {
                    return new REVIEWRow[0];
                }
                else {
                    return ((REVIEWRow[])(base.GetChildRows(this.Table.ChildRelations["REVIEW_FK1"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class RESERVATIONRow : global::System.Data.DataRow {
            
            private RESERVATIONDataTable tableRESERVATION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal RESERVATIONRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRESERVATION = ((RESERVATIONDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RES_NO {
                get {
                    return ((string)(this[this.tableRESERVATION.RES_NOColumn]));
                }
                set {
                    this[this.tableRESERVATION.RES_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CUS_ID {
                get {
                    try {
                        return ((string)(this[this.tableRESERVATION.CUS_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'RESERVATION\' 테이블의 \'CUS_ID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableRESERVATION.CUS_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CLO_ID {
                get {
                    try {
                        return ((string)(this[this.tableRESERVATION.CLO_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'RESERVATION\' 테이블의 \'CLO_ID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableRESERVATION.CLO_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RES_TIME {
                get {
                    try {
                        return ((string)(this[this.tableRESERVATION.RES_TIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'RESERVATION\' 테이블의 \'RES_TIME\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableRESERVATION.RES_TIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CLOTHESRow CLOTHESRow {
                get {
                    return ((CLOTHESRow)(this.GetParentRow(this.Table.ParentRelations["RESERVATION_FK1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["RESERVATION_FK1"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CUSTOMERRow CUSTOMERRow {
                get {
                    return ((CUSTOMERRow)(this.GetParentRow(this.Table.ParentRelations["RESERVATION_FK2"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["RESERVATION_FK2"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable1Row DataTable1Row {
                get {
                    return ((DataTable1Row)(this.GetParentRow(this.Table.ParentRelations["RESERVATION_FK11"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["RESERVATION_FK11"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable2Row DataTable2Row {
                get {
                    return ((DataTable2Row)(this.GetParentRow(this.Table.ParentRelations["RESERVATION_FK12"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["RESERVATION_FK12"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCUS_IDNull() {
                return this.IsNull(this.tableRESERVATION.CUS_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCUS_IDNull() {
                this[this.tableRESERVATION.CUS_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCLO_IDNull() {
                return this.IsNull(this.tableRESERVATION.CLO_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCLO_IDNull() {
                this[this.tableRESERVATION.CLO_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRES_TIMENull() {
                return this.IsNull(this.tableRESERVATION.RES_TIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRES_TIMENull() {
                this[this.tableRESERVATION.RES_TIMEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class REVIEWRow : global::System.Data.DataRow {
            
            private REVIEWDataTable tableREVIEW;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal REVIEWRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableREVIEW = ((REVIEWDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string REV_NO {
                get {
                    return ((string)(this[this.tableREVIEW.REV_NOColumn]));
                }
                set {
                    this[this.tableREVIEW.REV_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string REN_NO {
                get {
                    return ((string)(this[this.tableREVIEW.REN_NOColumn]));
                }
                set {
                    this[this.tableREVIEW.REN_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string COMMENTS {
                get {
                    try {
                        return ((string)(this[this.tableREVIEW.COMMENTSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'REVIEW\' 테이블의 \'COMMENTS\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableREVIEW.COMMENTSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TITLE {
                get {
                    try {
                        return ((string)(this[this.tableREVIEW.TITLEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'REVIEW\' 테이블의 \'TITLE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableREVIEW.TITLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RENTALRow RENTALRow {
                get {
                    return ((RENTALRow)(this.GetParentRow(this.Table.ParentRelations["REVIEW_FK1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["REVIEW_FK1"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCOMMENTSNull() {
                return this.IsNull(this.tableREVIEW.COMMENTSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCOMMENTSNull() {
                this[this.tableREVIEW.COMMENTSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTITLENull() {
                return this.IsNull(this.tableREVIEW.TITLEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTITLENull() {
                this[this.tableREVIEW.TITLEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DataTable1Row : global::System.Data.DataRow {
            
            private DataTable1DataTable tableDataTable1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DataTable1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDataTable1 = ((DataTable1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string REN_NO {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.REN_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable1\' 테이블의 \'REN_NO\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.REN_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string REN_TIME {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.REN_TIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable1\' 테이블의 \'REN_TIME\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.REN_TIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RET_TIME {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.RET_TIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable1\' 테이블의 \'RET_TIME\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.RET_TIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CLO_ID {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.CLO_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable1\' 테이블의 \'CLO_ID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.CLO_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CUS_ID {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.CUS_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable1\' 테이블의 \'CUS_ID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.CUS_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string STA_ID {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.STA_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable1\' 테이블의 \'STA_ID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.STA_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CLO_NAME {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.CLO_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable1\' 테이블의 \'CLO_NAME\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.CLO_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CUS_NAME {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.CUS_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable1\' 테이블의 \'CUS_NAME\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.CUS_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RET_ID {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.RET_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable1\' 테이블의 \'RET_ID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.RET_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GRADE {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.GRADEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable1\' 테이블의 \'GRADE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.GRADEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PAYRow PAYRow {
                get {
                    return ((PAYRow)(this.GetParentRow(this.Table.ParentRelations["CLOTHES_FK21"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["CLOTHES_FK21"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsREN_NONull() {
                return this.IsNull(this.tableDataTable1.REN_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetREN_NONull() {
                this[this.tableDataTable1.REN_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsREN_TIMENull() {
                return this.IsNull(this.tableDataTable1.REN_TIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetREN_TIMENull() {
                this[this.tableDataTable1.REN_TIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRET_TIMENull() {
                return this.IsNull(this.tableDataTable1.RET_TIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRET_TIMENull() {
                this[this.tableDataTable1.RET_TIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCLO_IDNull() {
                return this.IsNull(this.tableDataTable1.CLO_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCLO_IDNull() {
                this[this.tableDataTable1.CLO_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCUS_IDNull() {
                return this.IsNull(this.tableDataTable1.CUS_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCUS_IDNull() {
                this[this.tableDataTable1.CUS_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSTA_IDNull() {
                return this.IsNull(this.tableDataTable1.STA_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSTA_IDNull() {
                this[this.tableDataTable1.STA_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCLO_NAMENull() {
                return this.IsNull(this.tableDataTable1.CLO_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCLO_NAMENull() {
                this[this.tableDataTable1.CLO_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCUS_NAMENull() {
                return this.IsNull(this.tableDataTable1.CUS_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCUS_NAMENull() {
                this[this.tableDataTable1.CUS_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRET_IDNull() {
                return this.IsNull(this.tableDataTable1.RET_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRET_IDNull() {
                this[this.tableDataTable1.RET_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGRADENull() {
                return this.IsNull(this.tableDataTable1.GRADEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGRADENull() {
                this[this.tableDataTable1.GRADEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RENTALRow[] GetRENTALRows() {
                if ((this.Table.ChildRelations["RENTAL_FK11"] == null)) {
                    return new RENTALRow[0];
                }
                else {
                    return ((RENTALRow[])(base.GetChildRows(this.Table.ChildRelations["RENTAL_FK11"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RESERVATIONRow[] GetRESERVATIONRows() {
                if ((this.Table.ChildRelations["RESERVATION_FK11"] == null)) {
                    return new RESERVATIONRow[0];
                }
                else {
                    return ((RESERVATIONRow[])(base.GetChildRows(this.Table.ChildRelations["RESERVATION_FK11"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DataTable2Row : global::System.Data.DataRow {
            
            private DataTable2DataTable tableDataTable2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DataTable2Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDataTable2 = ((DataTable2DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RES_NO {
                get {
                    try {
                        return ((string)(this[this.tableDataTable2.RES_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable2\' 테이블의 \'RES_NO\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable2.RES_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CUS_ID {
                get {
                    try {
                        return ((string)(this[this.tableDataTable2.CUS_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable2\' 테이블의 \'CUS_ID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable2.CUS_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CLO_ID {
                get {
                    try {
                        return ((string)(this[this.tableDataTable2.CLO_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable2\' 테이블의 \'CLO_ID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable2.CLO_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RES_TIME {
                get {
                    try {
                        return ((string)(this[this.tableDataTable2.RES_TIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable2\' 테이블의 \'RES_TIME\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable2.RES_TIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CLO_NAME {
                get {
                    try {
                        return ((string)(this[this.tableDataTable2.CLO_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable2\' 테이블의 \'CLO_NAME\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable2.CLO_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CUS_NAME {
                get {
                    try {
                        return ((string)(this[this.tableDataTable2.CUS_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable2\' 테이블의 \'CUS_NAME\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable2.CUS_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRES_NONull() {
                return this.IsNull(this.tableDataTable2.RES_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRES_NONull() {
                this[this.tableDataTable2.RES_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCUS_IDNull() {
                return this.IsNull(this.tableDataTable2.CUS_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCUS_IDNull() {
                this[this.tableDataTable2.CUS_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCLO_IDNull() {
                return this.IsNull(this.tableDataTable2.CLO_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCLO_IDNull() {
                this[this.tableDataTable2.CLO_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRES_TIMENull() {
                return this.IsNull(this.tableDataTable2.RES_TIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRES_TIMENull() {
                this[this.tableDataTable2.RES_TIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCLO_NAMENull() {
                return this.IsNull(this.tableDataTable2.CLO_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCLO_NAMENull() {
                this[this.tableDataTable2.CLO_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCUS_NAMENull() {
                return this.IsNull(this.tableDataTable2.CUS_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCUS_NAMENull() {
                this[this.tableDataTable2.CUS_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RENTALRow[] GetRENTALRows() {
                if ((this.Table.ChildRelations["RENTAL_FK12"] == null)) {
                    return new RENTALRow[0];
                }
                else {
                    return ((RENTALRow[])(base.GetChildRows(this.Table.ChildRelations["RENTAL_FK12"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RESERVATIONRow[] GetRESERVATIONRows() {
                if ((this.Table.ChildRelations["RESERVATION_FK12"] == null)) {
                    return new RESERVATIONRow[0];
                }
                else {
                    return ((RESERVATIONRow[])(base.GetChildRows(this.Table.ChildRelations["RESERVATION_FK12"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class LATEFEERow : global::System.Data.DataRow {
            
            private LATEFEEDataTable tableLATEFEE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal LATEFEERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLATEFEE = ((LATEFEEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LAT_NO {
                get {
                    return ((string)(this[this.tableLATEFEE.LAT_NOColumn]));
                }
                set {
                    this[this.tableLATEFEE.LAT_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CUS_ID {
                get {
                    try {
                        return ((string)(this[this.tableLATEFEE.CUS_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'LATEFEE\' 테이블의 \'CUS_ID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableLATEFEE.CUS_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LAT_TIME {
                get {
                    try {
                        return ((string)(this[this.tableLATEFEE.LAT_TIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'LATEFEE\' 테이블의 \'LAT_TIME\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableLATEFEE.LAT_TIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LAT_FEE {
                get {
                    try {
                        return ((string)(this[this.tableLATEFEE.LAT_FEEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'LATEFEE\' 테이블의 \'LAT_FEE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableLATEFEE.LAT_FEEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CUSTOMERRow CUSTOMERRow {
                get {
                    return ((CUSTOMERRow)(this.GetParentRow(this.Table.ParentRelations["LATEFEE_FK1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["LATEFEE_FK1"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCUS_IDNull() {
                return this.IsNull(this.tableLATEFEE.CUS_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCUS_IDNull() {
                this[this.tableLATEFEE.CUS_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLAT_TIMENull() {
                return this.IsNull(this.tableLATEFEE.LAT_TIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLAT_TIMENull() {
                this[this.tableLATEFEE.LAT_TIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLAT_FEENull() {
                return this.IsNull(this.tableLATEFEE.LAT_FEEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLAT_FEENull() {
                this[this.tableLATEFEE.LAT_FEEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class HUMANRowChangeEvent : global::System.EventArgs {
            
            private HUMANRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public HUMANRowChangeEvent(HUMANRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public HUMANRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class BLACKLISTRowChangeEvent : global::System.EventArgs {
            
            private BLACKLISTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BLACKLISTRowChangeEvent(BLACKLISTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BLACKLISTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class CATEGORYRowChangeEvent : global::System.EventArgs {
            
            private CATEGORYRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CATEGORYRowChangeEvent(CATEGORYRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CATEGORYRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class CLOTHESRowChangeEvent : global::System.EventArgs {
            
            private CLOTHESRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CLOTHESRowChangeEvent(CLOTHESRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CLOTHESRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class CUSTOMERRowChangeEvent : global::System.EventArgs {
            
            private CUSTOMERRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CUSTOMERRowChangeEvent(CUSTOMERRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CUSTOMERRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class MANAGERRowChangeEvent : global::System.EventArgs {
            
            private MANAGERRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MANAGERRowChangeEvent(MANAGERRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MANAGERRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class PAYRowChangeEvent : global::System.EventArgs {
            
            private PAYRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PAYRowChangeEvent(PAYRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PAYRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class STAFFRowChangeEvent : global::System.EventArgs {
            
            private STAFFRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public STAFFRowChangeEvent(STAFFRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public STAFFRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class RENTALRowChangeEvent : global::System.EventArgs {
            
            private RENTALRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RENTALRowChangeEvent(RENTALRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RENTALRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class RESERVATIONRowChangeEvent : global::System.EventArgs {
            
            private RESERVATIONRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RESERVATIONRowChangeEvent(RESERVATIONRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RESERVATIONRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class REVIEWRowChangeEvent : global::System.EventArgs {
            
            private REVIEWRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public REVIEWRowChangeEvent(REVIEWRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public REVIEWRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class DataTable1RowChangeEvent : global::System.EventArgs {
            
            private DataTable1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable1RowChangeEvent(DataTable1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class DataTable2RowChangeEvent : global::System.EventArgs {
            
            private DataTable2Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable2RowChangeEvent(DataTable2Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable2Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class LATEFEERowChangeEvent : global::System.EventArgs {
            
            private LATEFEERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LATEFEERowChangeEvent(LATEFEERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LATEFEERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace WindowsFormsApplication1.DataSet1TableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class HUMANTableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.DataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.DataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.DataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.DataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public HUMANTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::Oracle.DataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.DataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::Oracle.DataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.DataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "HUMAN";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("PASSWORD", "PASSWORD");
            tableMapping.ColumnMappings.Add("ROLE", "ROLE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"A5293962\".\"HUMAN\" WHERE ((\"ID\" = :Original_ID) AND (\"PASSWORD\" = :Or" +
                "iginal_PASSWORD) AND (\"ROLE\" = :Original_ROLE))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Oracle.DataAccess.Client.OracleParameter param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ID";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PASSWORD";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "PASSWORD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ROLE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "ROLE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"A5293962\".\"HUMAN\" (\"ID\", \"PASSWORD\", \"ROLE\") VALUES (:ID, :PASSWORD," +
                " :ROLE)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "ID";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "ID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "PASSWORD";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "PASSWORD";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "ROLE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "ROLE";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE \"A5293962\".\"HUMAN\" SET \"ID\" = :ID, \"PASSWORD\" = :PASSWORD, \"ROLE\" = :ROLE " +
                "WHERE ((\"ID\" = :Original_ID) AND (\"PASSWORD\" = :Original_PASSWORD) AND (\"ROLE\" =" +
                " :Original_ROLE))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "ID";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "ID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "PASSWORD";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "PASSWORD";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "ROLE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "ROLE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ID";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PASSWORD";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "PASSWORD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ROLE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "ROLE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.DataAccess.Client.OracleConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication1.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.DataAccess.Client.OracleCommand[1];
            this._commandCollection[0] = new global::Oracle.DataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, PASSWORD, ROLE FROM A5293962.HUMAN";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.HUMANDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.HUMANDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.HUMANDataTable dataTable = new DataSet1.HUMANDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.HUMANDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "HUMAN");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_ID, string Original_PASSWORD, string Original_ROLE) {
            if ((Original_ID == null)) {
                throw new global::System.ArgumentNullException("Original_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_ID));
            }
            if ((Original_PASSWORD == null)) {
                throw new global::System.ArgumentNullException("Original_PASSWORD");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_PASSWORD));
            }
            if ((Original_ROLE == null)) {
                throw new global::System.ArgumentNullException("Original_ROLE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_ROLE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string ID, string PASSWORD, string ROLE) {
            if ((ID == null)) {
                throw new global::System.ArgumentNullException("ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(ID));
            }
            if ((PASSWORD == null)) {
                throw new global::System.ArgumentNullException("PASSWORD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(PASSWORD));
            }
            if ((ROLE == null)) {
                throw new global::System.ArgumentNullException("ROLE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(ROLE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string ID, string PASSWORD, string ROLE, string Original_ID, string Original_PASSWORD, string Original_ROLE) {
            if ((ID == null)) {
                throw new global::System.ArgumentNullException("ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(ID));
            }
            if ((PASSWORD == null)) {
                throw new global::System.ArgumentNullException("PASSWORD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(PASSWORD));
            }
            if ((ROLE == null)) {
                throw new global::System.ArgumentNullException("ROLE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(ROLE));
            }
            if ((Original_ID == null)) {
                throw new global::System.ArgumentNullException("Original_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_ID));
            }
            if ((Original_PASSWORD == null)) {
                throw new global::System.ArgumentNullException("Original_PASSWORD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_PASSWORD));
            }
            if ((Original_ROLE == null)) {
                throw new global::System.ArgumentNullException("Original_ROLE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_ROLE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string PASSWORD, string ROLE, string Original_ID, string Original_PASSWORD, string Original_ROLE) {
            return this.Update(Original_ID, PASSWORD, ROLE, Original_ID, Original_PASSWORD, Original_ROLE);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class BLACKLISTTableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.DataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.DataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.DataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.DataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public BLACKLISTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::Oracle.DataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.DataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::Oracle.DataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.DataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "BLACKLIST";
            tableMapping.ColumnMappings.Add("CUS_ID", "CUS_ID");
            tableMapping.ColumnMappings.Add("REASON", "REASON");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"A5293962\".\"BLACKLIST\" WHERE ((\"CUS_ID\" = :Original_CUS_ID) AND ((:Is" +
                "Null_REASON = 1 AND \"REASON\" IS NULL) OR (\"REASON\" = :Original_REASON)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Oracle.DataAccess.Client.OracleParameter param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CUS_ID";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CUS_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_REASON";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "REASON";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_REASON";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "REASON";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"A5293962\".\"BLACKLIST\" (\"CUS_ID\", \"REASON\") VALUES (:CUS_ID, :REASON)" +
                "";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "CUS_ID";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CUS_ID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "REASON";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "REASON";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE \"A5293962\".\"BLACKLIST\" SET \"CUS_ID\" = :CUS_ID, \"REASON\" = :REASON WHERE ((" +
                "\"CUS_ID\" = :Original_CUS_ID) AND ((:IsNull_REASON = 1 AND \"REASON\" IS NULL) OR (" +
                "\"REASON\" = :Original_REASON)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "CUS_ID";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CUS_ID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "REASON";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "REASON";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CUS_ID";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CUS_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_REASON";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "REASON";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_REASON";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "REASON";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.DataAccess.Client.OracleConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication1.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.DataAccess.Client.OracleCommand[1];
            this._commandCollection[0] = new global::Oracle.DataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT CUS_ID, REASON FROM A5293962.BLACKLIST";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.BLACKLISTDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.BLACKLISTDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.BLACKLISTDataTable dataTable = new DataSet1.BLACKLISTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.BLACKLISTDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "BLACKLIST");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_CUS_ID, string Original_REASON) {
            if ((Original_CUS_ID == null)) {
                throw new global::System.ArgumentNullException("Original_CUS_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_CUS_ID));
            }
            if ((Original_REASON == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_REASON));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string CUS_ID, string REASON) {
            if ((CUS_ID == null)) {
                throw new global::System.ArgumentNullException("CUS_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(CUS_ID));
            }
            if ((REASON == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(REASON));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string CUS_ID, string REASON, string Original_CUS_ID, string Original_REASON) {
            if ((CUS_ID == null)) {
                throw new global::System.ArgumentNullException("CUS_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(CUS_ID));
            }
            if ((REASON == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(REASON));
            }
            if ((Original_CUS_ID == null)) {
                throw new global::System.ArgumentNullException("Original_CUS_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Original_CUS_ID));
            }
            if ((Original_REASON == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_REASON));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string REASON, string Original_CUS_ID, string Original_REASON) {
            return this.Update(Original_CUS_ID, REASON, Original_CUS_ID, Original_REASON);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CATEGORYTableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.DataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.DataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.DataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.DataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public CATEGORYTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::Oracle.DataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.DataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::Oracle.DataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.DataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CATEGORY";
            tableMapping.ColumnMappings.Add("CAT_ID", "CAT_ID");
            tableMapping.ColumnMappings.Add("CAT_NAME", "CAT_NAME");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"A5293962\".\"CATEGORY\" WHERE ((\"CAT_ID\" = :Original_CAT_ID) AND ((:IsN" +
                "ull_CAT_NAME = 1 AND \"CAT_NAME\" IS NULL) OR (\"CAT_NAME\" = :Original_CAT_NAME)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Oracle.DataAccess.Client.OracleParameter param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CAT_ID";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CAT_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CAT_NAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "CAT_NAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CAT_NAME";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CAT_NAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"A5293962\".\"CATEGORY\" (\"CAT_ID\", \"CAT_NAME\") VALUES (:CAT_ID, :CAT_NA" +
                "ME)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "CAT_ID";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CAT_ID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "CAT_NAME";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CAT_NAME";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE \"A5293962\".\"CATEGORY\" SET \"CAT_ID\" = :CAT_ID, \"CAT_NAME\" = :CAT_NAME WHERE" +
                " ((\"CAT_ID\" = :Original_CAT_ID) AND ((:IsNull_CAT_NAME = 1 AND \"CAT_NAME\" IS NUL" +
                "L) OR (\"CAT_NAME\" = :Original_CAT_NAME)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "CAT_ID";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CAT_ID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "CAT_NAME";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CAT_NAME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CAT_ID";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CAT_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CAT_NAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "CAT_NAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CAT_NAME";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CAT_NAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.DataAccess.Client.OracleConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication1.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.DataAccess.Client.OracleCommand[1];
            this._commandCollection[0] = new global::Oracle.DataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT CAT_ID, CAT_NAME FROM A5293962.CATEGORY";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.CATEGORYDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.CATEGORYDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.CATEGORYDataTable dataTable = new DataSet1.CATEGORYDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.CATEGORYDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "CATEGORY");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_CAT_ID, string Original_CAT_NAME) {
            if ((Original_CAT_ID == null)) {
                throw new global::System.ArgumentNullException("Original_CAT_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_CAT_ID));
            }
            if ((Original_CAT_NAME == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_CAT_NAME));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string CAT_ID, string CAT_NAME) {
            if ((CAT_ID == null)) {
                throw new global::System.ArgumentNullException("CAT_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(CAT_ID));
            }
            if ((CAT_NAME == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(CAT_NAME));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string CAT_ID, string CAT_NAME, string Original_CAT_ID, string Original_CAT_NAME) {
            if ((CAT_ID == null)) {
                throw new global::System.ArgumentNullException("CAT_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(CAT_ID));
            }
            if ((CAT_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(CAT_NAME));
            }
            if ((Original_CAT_ID == null)) {
                throw new global::System.ArgumentNullException("Original_CAT_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Original_CAT_ID));
            }
            if ((Original_CAT_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_CAT_NAME));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string CAT_NAME, string Original_CAT_ID, string Original_CAT_NAME) {
            return this.Update(Original_CAT_ID, CAT_NAME, Original_CAT_ID, Original_CAT_NAME);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CLOTHESTableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.DataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.DataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.DataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.DataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public CLOTHESTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::Oracle.DataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.DataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::Oracle.DataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.DataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CLOTHES";
            tableMapping.ColumnMappings.Add("CLO_ID", "CLO_ID");
            tableMapping.ColumnMappings.Add("CLO_NAME", "CLO_NAME");
            tableMapping.ColumnMappings.Add("CLO_BRAND", "CLO_BRAND");
            tableMapping.ColumnMappings.Add("CLO_SIZE", "CLO_SIZE");
            tableMapping.ColumnMappings.Add("CLO_COLOR", "CLO_COLOR");
            tableMapping.ColumnMappings.Add("CLO_LOCATION", "CLO_LOCATION");
            tableMapping.ColumnMappings.Add("CLO_RETURNDAY", "CLO_RETURNDAY");
            tableMapping.ColumnMappings.Add("CLO_RENTAL", "CLO_RENTAL");
            tableMapping.ColumnMappings.Add("CLO_RESERVATION", "CLO_RESERVATION");
            tableMapping.ColumnMappings.Add("CAT_ID", "CAT_ID");
            tableMapping.ColumnMappings.Add("GRADE", "GRADE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""A5293962"".""CLOTHES"" WHERE ((""CLO_ID"" = :Original_CLO_ID) AND ((:IsNull_CLO_NAME = 1 AND ""CLO_NAME"" IS NULL) OR (""CLO_NAME"" = :Original_CLO_NAME)) AND ((:IsNull_CLO_BRAND = 1 AND ""CLO_BRAND"" IS NULL) OR (""CLO_BRAND"" = :Original_CLO_BRAND)) AND ((:IsNull_CLO_SIZE = 1 AND ""CLO_SIZE"" IS NULL) OR (""CLO_SIZE"" = :Original_CLO_SIZE)) AND ((:IsNull_CLO_COLOR = 1 AND ""CLO_COLOR"" IS NULL) OR (""CLO_COLOR"" = :Original_CLO_COLOR)) AND ((:IsNull_CLO_LOCATION = 1 AND ""CLO_LOCATION"" IS NULL) OR (""CLO_LOCATION"" = :Original_CLO_LOCATION)) AND ((:IsNull_CLO_RETURNDAY = 1 AND ""CLO_RETURNDAY"" IS NULL) OR (""CLO_RETURNDAY"" = :Original_CLO_RETURNDAY)) AND ((:IsNull_CLO_RENTAL = 1 AND ""CLO_RENTAL"" IS NULL) OR (""CLO_RENTAL"" = :Original_CLO_RENTAL)) AND ((:IsNull_CLO_RESERVATION = 1 AND ""CLO_RESERVATION"" IS NULL) OR (""CLO_RESERVATION"" = :Original_CLO_RESERVATION)) AND ((:IsNull_CAT_ID = 1 AND ""CAT_ID"" IS NULL) OR (""CAT_ID"" = :Original_CAT_ID)) AND ((:IsNull_GRADE = 1 AND ""GRADE"" IS NULL) OR (""GRADE"" = :Original_GRADE)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Oracle.DataAccess.Client.OracleParameter param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CLO_ID";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CLO_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CLO_NAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "CLO_NAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CLO_NAME";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CLO_NAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CLO_BRAND";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "CLO_BRAND";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CLO_BRAND";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CLO_BRAND";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CLO_SIZE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "CLO_SIZE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CLO_SIZE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CLO_SIZE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CLO_COLOR";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "CLO_COLOR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CLO_COLOR";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CLO_COLOR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CLO_LOCATION";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "CLO_LOCATION";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CLO_LOCATION";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CLO_LOCATION";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CLO_RETURNDAY";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "CLO_RETURNDAY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CLO_RETURNDAY";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CLO_RETURNDAY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CLO_RENTAL";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "CLO_RENTAL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CLO_RENTAL";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CLO_RENTAL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CLO_RESERVATION";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "CLO_RESERVATION";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CLO_RESERVATION";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Decimal;
            param.IsNullable = true;
            param.SourceColumn = "CLO_RESERVATION";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CAT_ID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "CAT_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CAT_ID";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CAT_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_GRADE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "GRADE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_GRADE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "GRADE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""A5293962"".""CLOTHES"" (""CLO_ID"", ""CLO_NAME"", ""CLO_BRAND"", ""CLO_SIZE"", ""CLO_COLOR"", ""CLO_LOCATION"", ""CLO_RETURNDAY"", ""CLO_RENTAL"", ""CLO_RESERVATION"", ""CAT_ID"", ""GRADE"") VALUES (:CLO_ID, :CLO_NAME, :CLO_BRAND, :CLO_SIZE, :CLO_COLOR, :CLO_LOCATION, :CLO_RETURNDAY, :CLO_RENTAL, :CLO_RESERVATION, :CAT_ID, :GRADE)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "CLO_ID";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CLO_ID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "CLO_NAME";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CLO_NAME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "CLO_BRAND";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CLO_BRAND";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "CLO_SIZE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CLO_SIZE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "CLO_COLOR";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CLO_COLOR";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "CLO_LOCATION";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CLO_LOCATION";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "CLO_RETURNDAY";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CLO_RETURNDAY";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "CLO_RENTAL";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CLO_RENTAL";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "CLO_RESERVATION";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Decimal;
            param.IsNullable = true;
            param.SourceColumn = "CLO_RESERVATION";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "CAT_ID";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CAT_ID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "GRADE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "GRADE";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""A5293962"".""CLOTHES"" SET ""CLO_ID"" = :CLO_ID, ""CLO_NAME"" = :CLO_NAME, ""CLO_BRAND"" = :CLO_BRAND, ""CLO_SIZE"" = :CLO_SIZE, ""CLO_COLOR"" = :CLO_COLOR, ""CLO_LOCATION"" = :CLO_LOCATION, ""CLO_RETURNDAY"" = :CLO_RETURNDAY, ""CLO_RENTAL"" = :CLO_RENTAL, ""CLO_RESERVATION"" = :CLO_RESERVATION, ""CAT_ID"" = :CAT_ID, ""GRADE"" = :GRADE WHERE ((""CLO_ID"" = :Original_CLO_ID) AND ((:IsNull_CLO_NAME = 1 AND ""CLO_NAME"" IS NULL) OR (""CLO_NAME"" = :Original_CLO_NAME)) AND ((:IsNull_CLO_BRAND = 1 AND ""CLO_BRAND"" IS NULL) OR (""CLO_BRAND"" = :Original_CLO_BRAND)) AND ((:IsNull_CLO_SIZE = 1 AND ""CLO_SIZE"" IS NULL) OR (""CLO_SIZE"" = :Original_CLO_SIZE)) AND ((:IsNull_CLO_COLOR = 1 AND ""CLO_COLOR"" IS NULL) OR (""CLO_COLOR"" = :Original_CLO_COLOR)) AND ((:IsNull_CLO_LOCATION = 1 AND ""CLO_LOCATION"" IS NULL) OR (""CLO_LOCATION"" = :Original_CLO_LOCATION)) AND ((:IsNull_CLO_RETURNDAY = 1 AND ""CLO_RETURNDAY"" IS NULL) OR (""CLO_RETURNDAY"" = :Original_CLO_RETURNDAY)) AND ((:IsNull_CLO_RENTAL = 1 AND ""CLO_RENTAL"" IS NULL) OR (""CLO_RENTAL"" = :Original_CLO_RENTAL)) AND ((:IsNull_CLO_RESERVATION = 1 AND ""CLO_RESERVATION"" IS NULL) OR (""CLO_RESERVATION"" = :Original_CLO_RESERVATION)) AND ((:IsNull_CAT_ID = 1 AND ""CAT_ID"" IS NULL) OR (""CAT_ID"" = :Original_CAT_ID)) AND ((:IsNull_GRADE = 1 AND ""GRADE"" IS NULL) OR (""GRADE"" = :Original_GRADE)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "CLO_ID";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CLO_ID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "CLO_NAME";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CLO_NAME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "CLO_BRAND";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CLO_BRAND";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "CLO_SIZE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CLO_SIZE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "CLO_COLOR";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CLO_COLOR";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "CLO_LOCATION";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CLO_LOCATION";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "CLO_RETURNDAY";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CLO_RETURNDAY";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "CLO_RENTAL";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CLO_RENTAL";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "CLO_RESERVATION";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Decimal;
            param.IsNullable = true;
            param.SourceColumn = "CLO_RESERVATION";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "CAT_ID";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CAT_ID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "GRADE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "GRADE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CLO_ID";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CLO_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CLO_NAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "CLO_NAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CLO_NAME";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CLO_NAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CLO_BRAND";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "CLO_BRAND";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CLO_BRAND";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CLO_BRAND";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CLO_SIZE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "CLO_SIZE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CLO_SIZE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CLO_SIZE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CLO_COLOR";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "CLO_COLOR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CLO_COLOR";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CLO_COLOR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CLO_LOCATION";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "CLO_LOCATION";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CLO_LOCATION";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CLO_LOCATION";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CLO_RETURNDAY";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "CLO_RETURNDAY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CLO_RETURNDAY";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CLO_RETURNDAY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CLO_RENTAL";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "CLO_RENTAL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CLO_RENTAL";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CLO_RENTAL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CLO_RESERVATION";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "CLO_RESERVATION";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CLO_RESERVATION";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Decimal;
            param.IsNullable = true;
            param.SourceColumn = "CLO_RESERVATION";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CAT_ID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "CAT_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CAT_ID";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CAT_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_GRADE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "GRADE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_GRADE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "GRADE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.DataAccess.Client.OracleConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication1.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.DataAccess.Client.OracleCommand[1];
            this._commandCollection[0] = new global::Oracle.DataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT CLO_ID, CLO_NAME, CLO_BRAND, CLO_SIZE, CLO_COLOR, CLO_LOCATION, CLO_RETURN" +
                "DAY, CLO_RENTAL, CLO_RESERVATION, CAT_ID, GRADE FROM A5293962.CLOTHES";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.CLOTHESDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.CLOTHESDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.CLOTHESDataTable dataTable = new DataSet1.CLOTHESDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.CLOTHESDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "CLOTHES");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_CLO_ID, string Original_CLO_NAME, string Original_CLO_BRAND, string Original_CLO_SIZE, string Original_CLO_COLOR, string Original_CLO_LOCATION, string Original_CLO_RETURNDAY, string Original_CLO_RENTAL, global::System.Nullable<decimal> Original_CLO_RESERVATION, string Original_CAT_ID, string Original_GRADE) {
            if ((Original_CLO_ID == null)) {
                throw new global::System.ArgumentNullException("Original_CLO_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_CLO_ID));
            }
            if ((Original_CLO_NAME == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_CLO_NAME));
            }
            if ((Original_CLO_BRAND == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_CLO_BRAND));
            }
            if ((Original_CLO_SIZE == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_CLO_SIZE));
            }
            if ((Original_CLO_COLOR == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_CLO_COLOR));
            }
            if ((Original_CLO_LOCATION == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_CLO_LOCATION));
            }
            if ((Original_CLO_RETURNDAY == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_CLO_RETURNDAY));
            }
            if ((Original_CLO_RENTAL == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_CLO_RENTAL));
            }
            if ((Original_CLO_RESERVATION.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((decimal)(Original_CLO_RESERVATION.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_CAT_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_CAT_ID));
            }
            if ((Original_GRADE == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_GRADE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string CLO_ID, string CLO_NAME, string CLO_BRAND, string CLO_SIZE, string CLO_COLOR, string CLO_LOCATION, string CLO_RETURNDAY, string CLO_RENTAL, global::System.Nullable<decimal> CLO_RESERVATION, string CAT_ID, string GRADE) {
            if ((CLO_ID == null)) {
                throw new global::System.ArgumentNullException("CLO_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(CLO_ID));
            }
            if ((CLO_NAME == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(CLO_NAME));
            }
            if ((CLO_BRAND == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(CLO_BRAND));
            }
            if ((CLO_SIZE == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(CLO_SIZE));
            }
            if ((CLO_COLOR == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(CLO_COLOR));
            }
            if ((CLO_LOCATION == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(CLO_LOCATION));
            }
            if ((CLO_RETURNDAY == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(CLO_RETURNDAY));
            }
            if ((CLO_RENTAL == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(CLO_RENTAL));
            }
            if ((CLO_RESERVATION.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(CLO_RESERVATION.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((CAT_ID == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(CAT_ID));
            }
            if ((GRADE == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(GRADE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string CLO_ID, 
                    string CLO_NAME, 
                    string CLO_BRAND, 
                    string CLO_SIZE, 
                    string CLO_COLOR, 
                    string CLO_LOCATION, 
                    string CLO_RETURNDAY, 
                    string CLO_RENTAL, 
                    global::System.Nullable<decimal> CLO_RESERVATION, 
                    string CAT_ID, 
                    string GRADE, 
                    string Original_CLO_ID, 
                    string Original_CLO_NAME, 
                    string Original_CLO_BRAND, 
                    string Original_CLO_SIZE, 
                    string Original_CLO_COLOR, 
                    string Original_CLO_LOCATION, 
                    string Original_CLO_RETURNDAY, 
                    string Original_CLO_RENTAL, 
                    global::System.Nullable<decimal> Original_CLO_RESERVATION, 
                    string Original_CAT_ID, 
                    string Original_GRADE) {
            if ((CLO_ID == null)) {
                throw new global::System.ArgumentNullException("CLO_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(CLO_ID));
            }
            if ((CLO_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(CLO_NAME));
            }
            if ((CLO_BRAND == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(CLO_BRAND));
            }
            if ((CLO_SIZE == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(CLO_SIZE));
            }
            if ((CLO_COLOR == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(CLO_COLOR));
            }
            if ((CLO_LOCATION == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(CLO_LOCATION));
            }
            if ((CLO_RETURNDAY == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(CLO_RETURNDAY));
            }
            if ((CLO_RENTAL == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(CLO_RENTAL));
            }
            if ((CLO_RESERVATION.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(CLO_RESERVATION.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((CAT_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(CAT_ID));
            }
            if ((GRADE == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(GRADE));
            }
            if ((Original_CLO_ID == null)) {
                throw new global::System.ArgumentNullException("Original_CLO_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_CLO_ID));
            }
            if ((Original_CLO_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_CLO_NAME));
            }
            if ((Original_CLO_BRAND == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_CLO_BRAND));
            }
            if ((Original_CLO_SIZE == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_CLO_SIZE));
            }
            if ((Original_CLO_COLOR == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_CLO_COLOR));
            }
            if ((Original_CLO_LOCATION == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_CLO_LOCATION));
            }
            if ((Original_CLO_RETURNDAY == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_CLO_RETURNDAY));
            }
            if ((Original_CLO_RENTAL == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_CLO_RENTAL));
            }
            if ((Original_CLO_RESERVATION.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((decimal)(Original_CLO_RESERVATION.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_CAT_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_CAT_ID));
            }
            if ((Original_GRADE == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_GRADE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string CLO_NAME, 
                    string CLO_BRAND, 
                    string CLO_SIZE, 
                    string CLO_COLOR, 
                    string CLO_LOCATION, 
                    string CLO_RETURNDAY, 
                    string CLO_RENTAL, 
                    global::System.Nullable<decimal> CLO_RESERVATION, 
                    string CAT_ID, 
                    string GRADE, 
                    string Original_CLO_ID, 
                    string Original_CLO_NAME, 
                    string Original_CLO_BRAND, 
                    string Original_CLO_SIZE, 
                    string Original_CLO_COLOR, 
                    string Original_CLO_LOCATION, 
                    string Original_CLO_RETURNDAY, 
                    string Original_CLO_RENTAL, 
                    global::System.Nullable<decimal> Original_CLO_RESERVATION, 
                    string Original_CAT_ID, 
                    string Original_GRADE) {
            return this.Update(Original_CLO_ID, CLO_NAME, CLO_BRAND, CLO_SIZE, CLO_COLOR, CLO_LOCATION, CLO_RETURNDAY, CLO_RENTAL, CLO_RESERVATION, CAT_ID, GRADE, Original_CLO_ID, Original_CLO_NAME, Original_CLO_BRAND, Original_CLO_SIZE, Original_CLO_COLOR, Original_CLO_LOCATION, Original_CLO_RETURNDAY, Original_CLO_RENTAL, Original_CLO_RESERVATION, Original_CAT_ID, Original_GRADE);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CUSTOMERTableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.DataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.DataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.DataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.DataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public CUSTOMERTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::Oracle.DataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.DataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::Oracle.DataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.DataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CUSTOMER";
            tableMapping.ColumnMappings.Add("CUS_ID", "CUS_ID");
            tableMapping.ColumnMappings.Add("CUS_NAME", "CUS_NAME");
            tableMapping.ColumnMappings.Add("CUS_CALL", "CUS_CALL");
            tableMapping.ColumnMappings.Add("CUS_MAIL", "CUS_MAIL");
            tableMapping.ColumnMappings.Add("CUS_FEE", "CUS_FEE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""A5293962"".""CUSTOMER"" WHERE ((""CUS_ID"" = :Original_CUS_ID) AND (""CUS_NAME"" = :Original_CUS_NAME) AND (""CUS_CALL"" = :Original_CUS_CALL) AND (""CUS_MAIL"" = :Original_CUS_MAIL) AND ((:IsNull_CUS_FEE = 1 AND ""CUS_FEE"" IS NULL) OR (""CUS_FEE"" = :Original_CUS_FEE)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Oracle.DataAccess.Client.OracleParameter param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CUS_ID";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CUS_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CUS_NAME";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CUS_NAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CUS_CALL";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CUS_CALL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CUS_MAIL";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CUS_MAIL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CUS_FEE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "CUS_FEE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CUS_FEE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CUS_FEE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"A5293962\".\"CUSTOMER\" (\"CUS_ID\", \"CUS_NAME\", \"CUS_CALL\", \"CUS_MAIL\", " +
                "\"CUS_FEE\") VALUES (:CUS_ID, :CUS_NAME, :CUS_CALL, :CUS_MAIL, :CUS_FEE)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "CUS_ID";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CUS_ID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "CUS_NAME";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CUS_NAME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "CUS_CALL";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CUS_CALL";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "CUS_MAIL";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CUS_MAIL";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "CUS_FEE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CUS_FEE";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""A5293962"".""CUSTOMER"" SET ""CUS_ID"" = :CUS_ID, ""CUS_NAME"" = :CUS_NAME, ""CUS_CALL"" = :CUS_CALL, ""CUS_MAIL"" = :CUS_MAIL, ""CUS_FEE"" = :CUS_FEE WHERE ((""CUS_ID"" = :Original_CUS_ID) AND (""CUS_NAME"" = :Original_CUS_NAME) AND (""CUS_CALL"" = :Original_CUS_CALL) AND (""CUS_MAIL"" = :Original_CUS_MAIL) AND ((:IsNull_CUS_FEE = 1 AND ""CUS_FEE"" IS NULL) OR (""CUS_FEE"" = :Original_CUS_FEE)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "CUS_ID";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CUS_ID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "CUS_NAME";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CUS_NAME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "CUS_CALL";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CUS_CALL";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "CUS_MAIL";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CUS_MAIL";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "CUS_FEE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CUS_FEE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CUS_ID";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CUS_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CUS_NAME";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CUS_NAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CUS_CALL";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CUS_CALL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CUS_MAIL";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CUS_MAIL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CUS_FEE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "CUS_FEE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CUS_FEE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CUS_FEE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.DataAccess.Client.OracleConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication1.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.DataAccess.Client.OracleCommand[1];
            this._commandCollection[0] = new global::Oracle.DataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT CUS_ID, CUS_NAME, CUS_CALL, CUS_MAIL, CUS_FEE FROM A5293962.CUSTOMER";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.CUSTOMERDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.CUSTOMERDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.CUSTOMERDataTable dataTable = new DataSet1.CUSTOMERDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.CUSTOMERDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "CUSTOMER");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_CUS_ID, string Original_CUS_NAME, string Original_CUS_CALL, string Original_CUS_MAIL, string Original_CUS_FEE) {
            if ((Original_CUS_ID == null)) {
                throw new global::System.ArgumentNullException("Original_CUS_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_CUS_ID));
            }
            if ((Original_CUS_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_CUS_NAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_CUS_NAME));
            }
            if ((Original_CUS_CALL == null)) {
                throw new global::System.ArgumentNullException("Original_CUS_CALL");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_CUS_CALL));
            }
            if ((Original_CUS_MAIL == null)) {
                throw new global::System.ArgumentNullException("Original_CUS_MAIL");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_CUS_MAIL));
            }
            if ((Original_CUS_FEE == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_CUS_FEE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string CUS_ID, string CUS_NAME, string CUS_CALL, string CUS_MAIL, string CUS_FEE) {
            if ((CUS_ID == null)) {
                throw new global::System.ArgumentNullException("CUS_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(CUS_ID));
            }
            if ((CUS_NAME == null)) {
                throw new global::System.ArgumentNullException("CUS_NAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(CUS_NAME));
            }
            if ((CUS_CALL == null)) {
                throw new global::System.ArgumentNullException("CUS_CALL");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(CUS_CALL));
            }
            if ((CUS_MAIL == null)) {
                throw new global::System.ArgumentNullException("CUS_MAIL");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(CUS_MAIL));
            }
            if ((CUS_FEE == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(CUS_FEE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string CUS_ID, string CUS_NAME, string CUS_CALL, string CUS_MAIL, string CUS_FEE, string Original_CUS_ID, string Original_CUS_NAME, string Original_CUS_CALL, string Original_CUS_MAIL, string Original_CUS_FEE) {
            if ((CUS_ID == null)) {
                throw new global::System.ArgumentNullException("CUS_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(CUS_ID));
            }
            if ((CUS_NAME == null)) {
                throw new global::System.ArgumentNullException("CUS_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(CUS_NAME));
            }
            if ((CUS_CALL == null)) {
                throw new global::System.ArgumentNullException("CUS_CALL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(CUS_CALL));
            }
            if ((CUS_MAIL == null)) {
                throw new global::System.ArgumentNullException("CUS_MAIL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(CUS_MAIL));
            }
            if ((CUS_FEE == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(CUS_FEE));
            }
            if ((Original_CUS_ID == null)) {
                throw new global::System.ArgumentNullException("Original_CUS_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_CUS_ID));
            }
            if ((Original_CUS_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_CUS_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_CUS_NAME));
            }
            if ((Original_CUS_CALL == null)) {
                throw new global::System.ArgumentNullException("Original_CUS_CALL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_CUS_CALL));
            }
            if ((Original_CUS_MAIL == null)) {
                throw new global::System.ArgumentNullException("Original_CUS_MAIL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_CUS_MAIL));
            }
            if ((Original_CUS_FEE == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_CUS_FEE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string CUS_NAME, string CUS_CALL, string CUS_MAIL, string CUS_FEE, string Original_CUS_ID, string Original_CUS_NAME, string Original_CUS_CALL, string Original_CUS_MAIL, string Original_CUS_FEE) {
            return this.Update(Original_CUS_ID, CUS_NAME, CUS_CALL, CUS_MAIL, CUS_FEE, Original_CUS_ID, Original_CUS_NAME, Original_CUS_CALL, Original_CUS_MAIL, Original_CUS_FEE);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MANAGERTableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.DataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.DataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.DataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.DataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public MANAGERTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::Oracle.DataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.DataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::Oracle.DataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.DataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MANAGER";
            tableMapping.ColumnMappings.Add("MAN_ID", "MAN_ID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"A5293962\".\"MANAGER\" WHERE ((\"MAN_ID\" = :Original_MAN_ID))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Oracle.DataAccess.Client.OracleParameter param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_MAN_ID";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "MAN_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"A5293962\".\"MANAGER\" (\"MAN_ID\") VALUES (:MAN_ID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "MAN_ID";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "MAN_ID";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE \"A5293962\".\"MANAGER\" SET \"MAN_ID\" = :MAN_ID WHERE ((\"MAN_ID\" = :Original_M" +
                "AN_ID))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "MAN_ID";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "MAN_ID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_MAN_ID";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "MAN_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.DataAccess.Client.OracleConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication1.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.DataAccess.Client.OracleCommand[1];
            this._commandCollection[0] = new global::Oracle.DataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MAN_ID FROM A5293962.MANAGER";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.MANAGERDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.MANAGERDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.MANAGERDataTable dataTable = new DataSet1.MANAGERDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.MANAGERDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "MANAGER");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_MAN_ID) {
            if ((Original_MAN_ID == null)) {
                throw new global::System.ArgumentNullException("Original_MAN_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_MAN_ID));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string MAN_ID) {
            if ((MAN_ID == null)) {
                throw new global::System.ArgumentNullException("MAN_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(MAN_ID));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string MAN_ID, string Original_MAN_ID) {
            if ((MAN_ID == null)) {
                throw new global::System.ArgumentNullException("MAN_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(MAN_ID));
            }
            if ((Original_MAN_ID == null)) {
                throw new global::System.ArgumentNullException("Original_MAN_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Original_MAN_ID));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Original_MAN_ID) {
            return this.Update(Original_MAN_ID, Original_MAN_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PAYTableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.DataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.DataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.DataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.DataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PAYTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::Oracle.DataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.DataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::Oracle.DataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.DataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PAY";
            tableMapping.ColumnMappings.Add("GRADE", "GRADE");
            tableMapping.ColumnMappings.Add("FEE", "FEE");
            tableMapping.ColumnMappings.Add("LATEFEE", "LATEFEE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"A5293962\".\"PAY\" WHERE ((\"GRADE\" = :Original_GRADE) AND ((:IsNull_FEE" +
                " = 1 AND \"FEE\" IS NULL) OR (\"FEE\" = :Original_FEE)) AND ((:IsNull_LATEFEE = 1 AN" +
                "D \"LATEFEE\" IS NULL) OR (\"LATEFEE\" = :Original_LATEFEE)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Oracle.DataAccess.Client.OracleParameter param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_GRADE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "GRADE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_FEE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "FEE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_FEE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "FEE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_LATEFEE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "LATEFEE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_LATEFEE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "LATEFEE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"A5293962\".\"PAY\" (\"GRADE\", \"FEE\", \"LATEFEE\") VALUES (:GRADE, :FEE, :L" +
                "ATEFEE)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "GRADE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "GRADE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "FEE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "FEE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "LATEFEE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "LATEFEE";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""A5293962"".""PAY"" SET ""GRADE"" = :GRADE, ""FEE"" = :FEE, ""LATEFEE"" = :LATEFEE WHERE ((""GRADE"" = :Original_GRADE) AND ((:IsNull_FEE = 1 AND ""FEE"" IS NULL) OR (""FEE"" = :Original_FEE)) AND ((:IsNull_LATEFEE = 1 AND ""LATEFEE"" IS NULL) OR (""LATEFEE"" = :Original_LATEFEE)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "GRADE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "GRADE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "FEE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "FEE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "LATEFEE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "LATEFEE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_GRADE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "GRADE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_FEE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "FEE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_FEE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "FEE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_LATEFEE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "LATEFEE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_LATEFEE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "LATEFEE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.DataAccess.Client.OracleConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication1.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.DataAccess.Client.OracleCommand[1];
            this._commandCollection[0] = new global::Oracle.DataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT GRADE, FEE, LATEFEE FROM A5293962.PAY";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.PAYDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.PAYDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.PAYDataTable dataTable = new DataSet1.PAYDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.PAYDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "PAY");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_GRADE, string Original_FEE, string Original_LATEFEE) {
            if ((Original_GRADE == null)) {
                throw new global::System.ArgumentNullException("Original_GRADE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_GRADE));
            }
            if ((Original_FEE == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_FEE));
            }
            if ((Original_LATEFEE == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_LATEFEE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string GRADE, string FEE, string LATEFEE) {
            if ((GRADE == null)) {
                throw new global::System.ArgumentNullException("GRADE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(GRADE));
            }
            if ((FEE == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(FEE));
            }
            if ((LATEFEE == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(LATEFEE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string GRADE, string FEE, string LATEFEE, string Original_GRADE, string Original_FEE, string Original_LATEFEE) {
            if ((GRADE == null)) {
                throw new global::System.ArgumentNullException("GRADE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(GRADE));
            }
            if ((FEE == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(FEE));
            }
            if ((LATEFEE == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(LATEFEE));
            }
            if ((Original_GRADE == null)) {
                throw new global::System.ArgumentNullException("Original_GRADE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_GRADE));
            }
            if ((Original_FEE == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_FEE));
            }
            if ((Original_LATEFEE == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_LATEFEE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string FEE, string LATEFEE, string Original_GRADE, string Original_FEE, string Original_LATEFEE) {
            return this.Update(Original_GRADE, FEE, LATEFEE, Original_GRADE, Original_FEE, Original_LATEFEE);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class STAFFTableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.DataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.DataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.DataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.DataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public STAFFTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::Oracle.DataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.DataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::Oracle.DataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.DataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "STAFF";
            tableMapping.ColumnMappings.Add("STA_ID", "STA_ID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"A5293962\".\"STAFF\" WHERE ((\"STA_ID\" = :Original_STA_ID))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Oracle.DataAccess.Client.OracleParameter param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_STA_ID";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "STA_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"A5293962\".\"STAFF\" (\"STA_ID\") VALUES (:STA_ID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "STA_ID";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "STA_ID";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE \"A5293962\".\"STAFF\" SET \"STA_ID\" = :STA_ID WHERE ((\"STA_ID\" = :Original_STA" +
                "_ID))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "STA_ID";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "STA_ID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_STA_ID";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "STA_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.DataAccess.Client.OracleConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication1.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.DataAccess.Client.OracleCommand[1];
            this._commandCollection[0] = new global::Oracle.DataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT STA_ID FROM A5293962.STAFF";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.STAFFDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.STAFFDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.STAFFDataTable dataTable = new DataSet1.STAFFDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.STAFFDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "STAFF");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_STA_ID) {
            if ((Original_STA_ID == null)) {
                throw new global::System.ArgumentNullException("Original_STA_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_STA_ID));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string STA_ID) {
            if ((STA_ID == null)) {
                throw new global::System.ArgumentNullException("STA_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(STA_ID));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string STA_ID, string Original_STA_ID) {
            if ((STA_ID == null)) {
                throw new global::System.ArgumentNullException("STA_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(STA_ID));
            }
            if ((Original_STA_ID == null)) {
                throw new global::System.ArgumentNullException("Original_STA_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Original_STA_ID));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Original_STA_ID) {
            return this.Update(Original_STA_ID, Original_STA_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class RENTALTableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.DataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.DataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.DataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.DataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RENTALTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::Oracle.DataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.DataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::Oracle.DataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.DataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "RENTAL";
            tableMapping.ColumnMappings.Add("REN_NO", "REN_NO");
            tableMapping.ColumnMappings.Add("REN_TIME", "REN_TIME");
            tableMapping.ColumnMappings.Add("RET_TIME", "RET_TIME");
            tableMapping.ColumnMappings.Add("CLO_ID", "CLO_ID");
            tableMapping.ColumnMappings.Add("CUS_ID", "CUS_ID");
            tableMapping.ColumnMappings.Add("STA_ID", "STA_ID");
            tableMapping.ColumnMappings.Add("RET_ID", "RET_ID");
            tableMapping.ColumnMappings.Add("GRADE", "GRADE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""A5293962"".""RENTAL"" WHERE ((""REN_NO"" = :Original_REN_NO) AND ((:IsNull_REN_TIME = 1 AND ""REN_TIME"" IS NULL) OR (""REN_TIME"" = :Original_REN_TIME)) AND ((:IsNull_RET_TIME = 1 AND ""RET_TIME"" IS NULL) OR (""RET_TIME"" = :Original_RET_TIME)) AND ((:IsNull_CLO_ID = 1 AND ""CLO_ID"" IS NULL) OR (""CLO_ID"" = :Original_CLO_ID)) AND ((:IsNull_CUS_ID = 1 AND ""CUS_ID"" IS NULL) OR (""CUS_ID"" = :Original_CUS_ID)) AND ((:IsNull_STA_ID = 1 AND ""STA_ID"" IS NULL) OR (""STA_ID"" = :Original_STA_ID)) AND ((:IsNull_GRADE = 1 AND ""GRADE"" IS NULL) OR (""GRADE"" = :Original_GRADE)) AND ((:IsNull_RET_ID = 1 AND ""RET_ID"" IS NULL) OR (""RET_ID"" = :Original_RET_ID)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Oracle.DataAccess.Client.OracleParameter param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_REN_NO";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "REN_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_REN_TIME";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "REN_TIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_REN_TIME";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "REN_TIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_RET_TIME";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "RET_TIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_RET_TIME";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "RET_TIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CLO_ID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "CLO_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CLO_ID";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CLO_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CUS_ID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "CUS_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CUS_ID";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CUS_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_STA_ID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "STA_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_STA_ID";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "STA_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_GRADE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "GRADE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_GRADE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "GRADE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_RET_ID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "RET_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_RET_ID";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "RET_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"A5293962\".\"RENTAL\" (\"REN_NO\", \"REN_TIME\", \"RET_TIME\", \"CLO_ID\", \"CUS" +
                "_ID\", \"STA_ID\", \"GRADE\", \"RET_ID\") VALUES (:REN_NO, :REN_TIME, :RET_TIME, :CLO_I" +
                "D, :CUS_ID, :STA_ID, :GRADE, :RET_ID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "REN_NO";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "REN_NO";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "REN_TIME";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "REN_TIME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "RET_TIME";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "RET_TIME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "CLO_ID";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CLO_ID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "CUS_ID";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CUS_ID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "STA_ID";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "STA_ID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "GRADE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "GRADE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "RET_ID";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "RET_ID";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""A5293962"".""RENTAL"" SET ""REN_NO"" = :REN_NO, ""REN_TIME"" = :REN_TIME, ""RET_TIME"" = :RET_TIME, ""CLO_ID"" = :CLO_ID, ""CUS_ID"" = :CUS_ID, ""STA_ID"" = :STA_ID, ""GRADE"" = :GRADE, ""RET_ID"" = :RET_ID WHERE ((""REN_NO"" = :Original_REN_NO) AND ((:IsNull_REN_TIME = 1 AND ""REN_TIME"" IS NULL) OR (""REN_TIME"" = :Original_REN_TIME)) AND ((:IsNull_RET_TIME = 1 AND ""RET_TIME"" IS NULL) OR (""RET_TIME"" = :Original_RET_TIME)) AND ((:IsNull_CLO_ID = 1 AND ""CLO_ID"" IS NULL) OR (""CLO_ID"" = :Original_CLO_ID)) AND ((:IsNull_CUS_ID = 1 AND ""CUS_ID"" IS NULL) OR (""CUS_ID"" = :Original_CUS_ID)) AND ((:IsNull_STA_ID = 1 AND ""STA_ID"" IS NULL) OR (""STA_ID"" = :Original_STA_ID)) AND ((:IsNull_GRADE = 1 AND ""GRADE"" IS NULL) OR (""GRADE"" = :Original_GRADE)) AND ((:IsNull_RET_ID = 1 AND ""RET_ID"" IS NULL) OR (""RET_ID"" = :Original_RET_ID)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "REN_NO";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "REN_NO";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "REN_TIME";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "REN_TIME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "RET_TIME";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "RET_TIME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "CLO_ID";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CLO_ID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "CUS_ID";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CUS_ID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "STA_ID";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "STA_ID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "GRADE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "GRADE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "RET_ID";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "RET_ID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_REN_NO";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "REN_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_REN_TIME";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "REN_TIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_REN_TIME";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "REN_TIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_RET_TIME";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "RET_TIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_RET_TIME";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "RET_TIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CLO_ID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "CLO_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CLO_ID";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CLO_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CUS_ID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "CUS_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CUS_ID";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CUS_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_STA_ID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "STA_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_STA_ID";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "STA_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_GRADE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "GRADE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_GRADE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "GRADE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_RET_ID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "RET_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_RET_ID";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "RET_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.DataAccess.Client.OracleConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication1.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.DataAccess.Client.OracleCommand[1];
            this._commandCollection[0] = new global::Oracle.DataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT REN_NO, REN_TIME, RET_TIME, CLO_ID, CUS_ID, STA_ID, GRADE, RET_ID FROM A52" +
                "93962.RENTAL ORDER BY REN_NO DESC";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.RENTALDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.RENTALDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.RENTALDataTable dataTable = new DataSet1.RENTALDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.RENTALDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "RENTAL");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_REN_NO, string Original_REN_TIME, string Original_RET_TIME, string Original_CLO_ID, string Original_CUS_ID, string Original_STA_ID, string Original_GRADE, string Original_RET_ID) {
            if ((Original_REN_NO == null)) {
                throw new global::System.ArgumentNullException("Original_REN_NO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_REN_NO));
            }
            if ((Original_REN_TIME == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_REN_TIME));
            }
            if ((Original_RET_TIME == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_RET_TIME));
            }
            if ((Original_CLO_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_CLO_ID));
            }
            if ((Original_CUS_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_CUS_ID));
            }
            if ((Original_STA_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_STA_ID));
            }
            if ((Original_GRADE == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_GRADE));
            }
            if ((Original_RET_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_RET_ID));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string REN_NO, string REN_TIME, string RET_TIME, string CLO_ID, string CUS_ID, string STA_ID, string GRADE, string RET_ID) {
            if ((REN_NO == null)) {
                throw new global::System.ArgumentNullException("REN_NO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(REN_NO));
            }
            if ((REN_TIME == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(REN_TIME));
            }
            if ((RET_TIME == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(RET_TIME));
            }
            if ((CLO_ID == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(CLO_ID));
            }
            if ((CUS_ID == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(CUS_ID));
            }
            if ((STA_ID == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(STA_ID));
            }
            if ((GRADE == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(GRADE));
            }
            if ((RET_ID == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(RET_ID));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string REN_NO, 
                    string REN_TIME, 
                    string RET_TIME, 
                    string CLO_ID, 
                    string CUS_ID, 
                    string STA_ID, 
                    string GRADE, 
                    string RET_ID, 
                    string Original_REN_NO, 
                    string Original_REN_TIME, 
                    string Original_RET_TIME, 
                    string Original_CLO_ID, 
                    string Original_CUS_ID, 
                    string Original_STA_ID, 
                    string Original_GRADE, 
                    string Original_RET_ID) {
            if ((REN_NO == null)) {
                throw new global::System.ArgumentNullException("REN_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(REN_NO));
            }
            if ((REN_TIME == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(REN_TIME));
            }
            if ((RET_TIME == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(RET_TIME));
            }
            if ((CLO_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(CLO_ID));
            }
            if ((CUS_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(CUS_ID));
            }
            if ((STA_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(STA_ID));
            }
            if ((GRADE == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(GRADE));
            }
            if ((RET_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(RET_ID));
            }
            if ((Original_REN_NO == null)) {
                throw new global::System.ArgumentNullException("Original_REN_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_REN_NO));
            }
            if ((Original_REN_TIME == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_REN_TIME));
            }
            if ((Original_RET_TIME == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_RET_TIME));
            }
            if ((Original_CLO_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_CLO_ID));
            }
            if ((Original_CUS_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_CUS_ID));
            }
            if ((Original_STA_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_STA_ID));
            }
            if ((Original_GRADE == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_GRADE));
            }
            if ((Original_RET_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_RET_ID));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string REN_TIME, string RET_TIME, string CLO_ID, string CUS_ID, string STA_ID, string GRADE, string RET_ID, string Original_REN_NO, string Original_REN_TIME, string Original_RET_TIME, string Original_CLO_ID, string Original_CUS_ID, string Original_STA_ID, string Original_GRADE, string Original_RET_ID) {
            return this.Update(Original_REN_NO, REN_TIME, RET_TIME, CLO_ID, CUS_ID, STA_ID, GRADE, RET_ID, Original_REN_NO, Original_REN_TIME, Original_RET_TIME, Original_CLO_ID, Original_CUS_ID, Original_STA_ID, Original_GRADE, Original_RET_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class RESERVATIONTableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.DataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.DataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.DataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.DataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RESERVATIONTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::Oracle.DataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.DataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::Oracle.DataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.DataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "RESERVATION";
            tableMapping.ColumnMappings.Add("RES_NO", "RES_NO");
            tableMapping.ColumnMappings.Add("CUS_ID", "CUS_ID");
            tableMapping.ColumnMappings.Add("CLO_ID", "CLO_ID");
            tableMapping.ColumnMappings.Add("RES_TIME", "RES_TIME");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""A5293962"".""RESERVATION"" WHERE ((""RES_NO"" = :Original_RES_NO) AND ((:IsNull_CUS_ID = 1 AND ""CUS_ID"" IS NULL) OR (""CUS_ID"" = :Original_CUS_ID)) AND ((:IsNull_CLO_ID = 1 AND ""CLO_ID"" IS NULL) OR (""CLO_ID"" = :Original_CLO_ID)) AND ((:IsNull_RES_TIME = 1 AND ""RES_TIME"" IS NULL) OR (""RES_TIME"" = :Original_RES_TIME)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Oracle.DataAccess.Client.OracleParameter param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_RES_NO";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "RES_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CUS_ID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "CUS_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CUS_ID";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CUS_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CLO_ID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "CLO_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CLO_ID";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CLO_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_RES_TIME";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "RES_TIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_RES_TIME";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "RES_TIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"A5293962\".\"RESERVATION\" (\"RES_NO\", \"CUS_ID\", \"CLO_ID\", \"RES_TIME\") V" +
                "ALUES (:RES_NO, :CUS_ID, :CLO_ID, :RES_TIME)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "RES_NO";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "RES_NO";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "CUS_ID";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CUS_ID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "CLO_ID";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CLO_ID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "RES_TIME";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "RES_TIME";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""A5293962"".""RESERVATION"" SET ""RES_NO"" = :RES_NO, ""CUS_ID"" = :CUS_ID, ""CLO_ID"" = :CLO_ID, ""RES_TIME"" = :RES_TIME WHERE ((""RES_NO"" = :Original_RES_NO) AND ((:IsNull_CUS_ID = 1 AND ""CUS_ID"" IS NULL) OR (""CUS_ID"" = :Original_CUS_ID)) AND ((:IsNull_CLO_ID = 1 AND ""CLO_ID"" IS NULL) OR (""CLO_ID"" = :Original_CLO_ID)) AND ((:IsNull_RES_TIME = 1 AND ""RES_TIME"" IS NULL) OR (""RES_TIME"" = :Original_RES_TIME)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "RES_NO";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "RES_NO";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "CUS_ID";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CUS_ID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "CLO_ID";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CLO_ID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "RES_TIME";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "RES_TIME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_RES_NO";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "RES_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CUS_ID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "CUS_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CUS_ID";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CUS_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CLO_ID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "CLO_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CLO_ID";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CLO_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_RES_TIME";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "RES_TIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_RES_TIME";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "RES_TIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.DataAccess.Client.OracleConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication1.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.DataAccess.Client.OracleCommand[1];
            this._commandCollection[0] = new global::Oracle.DataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT RES_NO, CUS_ID, CLO_ID, RES_TIME FROM A5293962.RESERVATION";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.RESERVATIONDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.RESERVATIONDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.RESERVATIONDataTable dataTable = new DataSet1.RESERVATIONDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.RESERVATIONDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "RESERVATION");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_RES_NO, string Original_CUS_ID, string Original_CLO_ID, string Original_RES_TIME) {
            if ((Original_RES_NO == null)) {
                throw new global::System.ArgumentNullException("Original_RES_NO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_RES_NO));
            }
            if ((Original_CUS_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_CUS_ID));
            }
            if ((Original_CLO_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_CLO_ID));
            }
            if ((Original_RES_TIME == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_RES_TIME));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string RES_NO, string CUS_ID, string CLO_ID, string RES_TIME) {
            if ((RES_NO == null)) {
                throw new global::System.ArgumentNullException("RES_NO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(RES_NO));
            }
            if ((CUS_ID == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(CUS_ID));
            }
            if ((CLO_ID == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(CLO_ID));
            }
            if ((RES_TIME == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(RES_TIME));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string RES_NO, string CUS_ID, string CLO_ID, string RES_TIME, string Original_RES_NO, string Original_CUS_ID, string Original_CLO_ID, string Original_RES_TIME) {
            if ((RES_NO == null)) {
                throw new global::System.ArgumentNullException("RES_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(RES_NO));
            }
            if ((CUS_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(CUS_ID));
            }
            if ((CLO_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(CLO_ID));
            }
            if ((RES_TIME == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(RES_TIME));
            }
            if ((Original_RES_NO == null)) {
                throw new global::System.ArgumentNullException("Original_RES_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_RES_NO));
            }
            if ((Original_CUS_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_CUS_ID));
            }
            if ((Original_CLO_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_CLO_ID));
            }
            if ((Original_RES_TIME == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_RES_TIME));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string CUS_ID, string CLO_ID, string RES_TIME, string Original_RES_NO, string Original_CUS_ID, string Original_CLO_ID, string Original_RES_TIME) {
            return this.Update(Original_RES_NO, CUS_ID, CLO_ID, RES_TIME, Original_RES_NO, Original_CUS_ID, Original_CLO_ID, Original_RES_TIME);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class REVIEWTableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.DataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.DataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.DataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.DataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public REVIEWTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::Oracle.DataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.DataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::Oracle.DataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.DataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "REVIEW";
            tableMapping.ColumnMappings.Add("REV_NO", "REV_NO");
            tableMapping.ColumnMappings.Add("REN_NO", "REN_NO");
            tableMapping.ColumnMappings.Add("COMMENTS", "COMMENTS");
            tableMapping.ColumnMappings.Add("TITLE", "TITLE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""A5293962"".""REVIEW"" WHERE ((""REV_NO"" = :Original_REV_NO) AND (""REN_NO"" = :Original_REN_NO) AND ((:IsNull_COMMENTS = 1 AND ""COMMENTS"" IS NULL) OR (""COMMENTS"" = :Original_COMMENTS)) AND ((:IsNull_TITLE = 1 AND ""TITLE"" IS NULL) OR (""TITLE"" = :Original_TITLE)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Oracle.DataAccess.Client.OracleParameter param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_REV_NO";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "REV_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_REN_NO";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "REN_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_COMMENTS";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "COMMENTS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_COMMENTS";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "COMMENTS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_TITLE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "TITLE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_TITLE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "TITLE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"A5293962\".\"REVIEW\" (\"REV_NO\", \"REN_NO\", \"COMMENTS\", \"TITLE\") VALUES " +
                "(:REV_NO, :REN_NO, :COMMENTS, :TITLE)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "REV_NO";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "REV_NO";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "REN_NO";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "REN_NO";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "COMMENTS";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "COMMENTS";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "TITLE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "TITLE";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""A5293962"".""REVIEW"" SET ""REV_NO"" = :REV_NO, ""REN_NO"" = :REN_NO, ""COMMENTS"" = :COMMENTS, ""TITLE"" = :TITLE WHERE ((""REV_NO"" = :Original_REV_NO) AND (""REN_NO"" = :Original_REN_NO) AND ((:IsNull_COMMENTS = 1 AND ""COMMENTS"" IS NULL) OR (""COMMENTS"" = :Original_COMMENTS)) AND ((:IsNull_TITLE = 1 AND ""TITLE"" IS NULL) OR (""TITLE"" = :Original_TITLE)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "REV_NO";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "REV_NO";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "REN_NO";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "REN_NO";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "COMMENTS";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "COMMENTS";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "TITLE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "TITLE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_REV_NO";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "REV_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_REN_NO";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "REN_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_COMMENTS";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "COMMENTS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_COMMENTS";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "COMMENTS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_TITLE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "TITLE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_TITLE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "TITLE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.DataAccess.Client.OracleConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication1.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.DataAccess.Client.OracleCommand[1];
            this._commandCollection[0] = new global::Oracle.DataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT REV_NO, REN_NO, COMMENTS, TITLE FROM A5293962.REVIEW";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.REVIEWDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.REVIEWDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.REVIEWDataTable dataTable = new DataSet1.REVIEWDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.REVIEWDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "REVIEW");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_REV_NO, string Original_REN_NO, string Original_COMMENTS, string Original_TITLE) {
            if ((Original_REV_NO == null)) {
                throw new global::System.ArgumentNullException("Original_REV_NO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_REV_NO));
            }
            if ((Original_REN_NO == null)) {
                throw new global::System.ArgumentNullException("Original_REN_NO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_REN_NO));
            }
            if ((Original_COMMENTS == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_COMMENTS));
            }
            if ((Original_TITLE == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_TITLE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string REV_NO, string REN_NO, string COMMENTS, string TITLE) {
            if ((REV_NO == null)) {
                throw new global::System.ArgumentNullException("REV_NO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(REV_NO));
            }
            if ((REN_NO == null)) {
                throw new global::System.ArgumentNullException("REN_NO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(REN_NO));
            }
            if ((COMMENTS == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(COMMENTS));
            }
            if ((TITLE == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(TITLE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string REV_NO, string REN_NO, string COMMENTS, string TITLE, string Original_REV_NO, string Original_REN_NO, string Original_COMMENTS, string Original_TITLE) {
            if ((REV_NO == null)) {
                throw new global::System.ArgumentNullException("REV_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(REV_NO));
            }
            if ((REN_NO == null)) {
                throw new global::System.ArgumentNullException("REN_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(REN_NO));
            }
            if ((COMMENTS == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(COMMENTS));
            }
            if ((TITLE == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(TITLE));
            }
            if ((Original_REV_NO == null)) {
                throw new global::System.ArgumentNullException("Original_REV_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_REV_NO));
            }
            if ((Original_REN_NO == null)) {
                throw new global::System.ArgumentNullException("Original_REN_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_REN_NO));
            }
            if ((Original_COMMENTS == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_COMMENTS));
            }
            if ((Original_TITLE == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_TITLE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string COMMENTS, string TITLE, string Original_REV_NO, string Original_REN_NO, string Original_COMMENTS, string Original_TITLE) {
            return this.Update(Original_REV_NO, Original_REN_NO, COMMENTS, TITLE, Original_REV_NO, Original_REN_NO, Original_COMMENTS, Original_TITLE);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DataTable1TableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.DataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.DataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.DataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.DataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DataTable1TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::Oracle.DataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.DataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::Oracle.DataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.DataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DataTable1";
            tableMapping.ColumnMappings.Add("REN_NO", "REN_NO");
            tableMapping.ColumnMappings.Add("REN_TIME", "REN_TIME");
            tableMapping.ColumnMappings.Add("RET_TIME", "RET_TIME");
            tableMapping.ColumnMappings.Add("CLO_ID", "CLO_ID");
            tableMapping.ColumnMappings.Add("CUS_ID", "CUS_ID");
            tableMapping.ColumnMappings.Add("STA_ID", "STA_ID");
            tableMapping.ColumnMappings.Add("CLO_NAME", "CLO_NAME");
            tableMapping.ColumnMappings.Add("CUS_NAME", "CUS_NAME");
            tableMapping.ColumnMappings.Add("RET_ID", "RET_ID");
            tableMapping.ColumnMappings.Add("GRADE", "GRADE");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.DataAccess.Client.OracleConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication1.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.DataAccess.Client.OracleCommand[1];
            this._commandCollection[0] = new global::Oracle.DataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT  A5293962.RENTAL.*, A5293962.CLOTHES.CLO_NAME, A5293962.CUSTOMER.CUS_NAME
FROM     A5293962.CLOTHES INNER JOIN
               A5293962.RENTAL ON A5293962.CLOTHES.CLO_ID = A5293962.RENTAL.CLO_ID INNER JOIN
               A5293962.CUSTOMER ON A5293962.RENTAL.CUS_ID = A5293962.CUSTOMER.CUS_ID
ORDER BY A5293962.RENTAL.REN_NO DESC";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int FillTHREE(DataSet1.DataTable1DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.DataTable1DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.DataTable1DataTable dataTable = new DataSet1.DataTable1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DataTable2TableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.DataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.DataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.DataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.DataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DataTable2TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::Oracle.DataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.DataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::Oracle.DataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.DataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DataTable2";
            tableMapping.ColumnMappings.Add("RES_NO", "RES_NO");
            tableMapping.ColumnMappings.Add("CUS_ID", "CUS_ID");
            tableMapping.ColumnMappings.Add("CLO_ID", "CLO_ID");
            tableMapping.ColumnMappings.Add("RES_TIME", "RES_TIME");
            tableMapping.ColumnMappings.Add("CLO_NAME", "CLO_NAME");
            tableMapping.ColumnMappings.Add("CUS_NAME", "CUS_NAME");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.DataAccess.Client.OracleConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication1.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.DataAccess.Client.OracleCommand[1];
            this._commandCollection[0] = new global::Oracle.DataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT  A5293962.RESERVATION.*, A5293962.CLOTHES.CLO_NAME, A5293962.CUSTOMER.CUS_NAME
FROM     A5293962.RESERVATION INNER JOIN
               A5293962.CLOTHES ON A5293962.RESERVATION.CLO_ID = A5293962.CLOTHES.CLO_ID INNER JOIN
               A5293962.CUSTOMER ON A5293962.RESERVATION.CUS_ID = A5293962.CUSTOMER.CUS_ID";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int FillFOUR(DataSet1.DataTable2DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.DataTable2DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.DataTable2DataTable dataTable = new DataSet1.DataTable2DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class LATEFEETableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.DataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.DataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.DataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.DataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public LATEFEETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::Oracle.DataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.DataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::Oracle.DataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.DataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "LATEFEE";
            tableMapping.ColumnMappings.Add("LAT_NO", "LAT_NO");
            tableMapping.ColumnMappings.Add("CUS_ID", "CUS_ID");
            tableMapping.ColumnMappings.Add("LAT_TIME", "LAT_TIME");
            tableMapping.ColumnMappings.Add("LAT_FEE", "LAT_FEE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""A5293962"".""LATEFEE"" WHERE ((""LAT_NO"" = :Original_LAT_NO) AND ((:IsNull_CUS_ID = 1 AND ""CUS_ID"" IS NULL) OR (""CUS_ID"" = :Original_CUS_ID)) AND ((:IsNull_LAT_TIME = 1 AND ""LAT_TIME"" IS NULL) OR (""LAT_TIME"" = :Original_LAT_TIME)) AND ((:IsNull_LAT_FEE = 1 AND ""LAT_FEE"" IS NULL) OR (""LAT_FEE"" = :Original_LAT_FEE)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Oracle.DataAccess.Client.OracleParameter param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_LAT_NO";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "LAT_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CUS_ID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "CUS_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CUS_ID";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CUS_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_LAT_TIME";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "LAT_TIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_LAT_TIME";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "LAT_TIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_LAT_FEE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "LAT_FEE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_LAT_FEE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "LAT_FEE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"A5293962\".\"LATEFEE\" (\"LAT_NO\", \"CUS_ID\", \"LAT_TIME\", \"LAT_FEE\") VALU" +
                "ES (:LAT_NO, :CUS_ID, :LAT_TIME, :LAT_FEE)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "LAT_NO";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "LAT_NO";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "CUS_ID";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CUS_ID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "LAT_TIME";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "LAT_TIME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "LAT_FEE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "LAT_FEE";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""A5293962"".""LATEFEE"" SET ""LAT_NO"" = :LAT_NO, ""CUS_ID"" = :CUS_ID, ""LAT_TIME"" = :LAT_TIME, ""LAT_FEE"" = :LAT_FEE WHERE ((""LAT_NO"" = :Original_LAT_NO) AND ((:IsNull_CUS_ID = 1 AND ""CUS_ID"" IS NULL) OR (""CUS_ID"" = :Original_CUS_ID)) AND ((:IsNull_LAT_TIME = 1 AND ""LAT_TIME"" IS NULL) OR (""LAT_TIME"" = :Original_LAT_TIME)) AND ((:IsNull_LAT_FEE = 1 AND ""LAT_FEE"" IS NULL) OR (""LAT_FEE"" = :Original_LAT_FEE)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "LAT_NO";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "LAT_NO";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "CUS_ID";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CUS_ID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "LAT_TIME";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "LAT_TIME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "LAT_FEE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "LAT_FEE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_LAT_NO";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "LAT_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CUS_ID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "CUS_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CUS_ID";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "CUS_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_LAT_TIME";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "LAT_TIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_LAT_TIME";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "LAT_TIME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_LAT_FEE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "LAT_FEE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_LAT_FEE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "LAT_FEE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.DataAccess.Client.OracleConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication1.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.DataAccess.Client.OracleCommand[1];
            this._commandCollection[0] = new global::Oracle.DataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT LAT_NO, CUS_ID, LAT_TIME, LAT_FEE FROM A5293962.LATEFEE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.LATEFEEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.LATEFEEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.LATEFEEDataTable dataTable = new DataSet1.LATEFEEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.LATEFEEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "LATEFEE");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_LAT_NO, string Original_CUS_ID, string Original_LAT_TIME, string Original_LAT_FEE) {
            if ((Original_LAT_NO == null)) {
                throw new global::System.ArgumentNullException("Original_LAT_NO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_LAT_NO));
            }
            if ((Original_CUS_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_CUS_ID));
            }
            if ((Original_LAT_TIME == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_LAT_TIME));
            }
            if ((Original_LAT_FEE == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_LAT_FEE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string LAT_NO, string CUS_ID, string LAT_TIME, string LAT_FEE) {
            if ((LAT_NO == null)) {
                throw new global::System.ArgumentNullException("LAT_NO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(LAT_NO));
            }
            if ((CUS_ID == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(CUS_ID));
            }
            if ((LAT_TIME == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(LAT_TIME));
            }
            if ((LAT_FEE == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(LAT_FEE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string LAT_NO, string CUS_ID, string LAT_TIME, string LAT_FEE, string Original_LAT_NO, string Original_CUS_ID, string Original_LAT_TIME, string Original_LAT_FEE) {
            if ((LAT_NO == null)) {
                throw new global::System.ArgumentNullException("LAT_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(LAT_NO));
            }
            if ((CUS_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(CUS_ID));
            }
            if ((LAT_TIME == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(LAT_TIME));
            }
            if ((LAT_FEE == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(LAT_FEE));
            }
            if ((Original_LAT_NO == null)) {
                throw new global::System.ArgumentNullException("Original_LAT_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_LAT_NO));
            }
            if ((Original_CUS_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_CUS_ID));
            }
            if ((Original_LAT_TIME == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_LAT_TIME));
            }
            if ((Original_LAT_FEE == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_LAT_FEE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string CUS_ID, string LAT_TIME, string LAT_FEE, string Original_LAT_NO, string Original_CUS_ID, string Original_LAT_TIME, string Original_LAT_FEE) {
            return this.Update(Original_LAT_NO, CUS_ID, LAT_TIME, LAT_FEE, Original_LAT_NO, Original_CUS_ID, Original_LAT_TIME, Original_LAT_FEE);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private HUMANTableAdapter _hUMANTableAdapter;
        
        private BLACKLISTTableAdapter _bLACKLISTTableAdapter;
        
        private CATEGORYTableAdapter _cATEGORYTableAdapter;
        
        private CLOTHESTableAdapter _cLOTHESTableAdapter;
        
        private CUSTOMERTableAdapter _cUSTOMERTableAdapter;
        
        private MANAGERTableAdapter _mANAGERTableAdapter;
        
        private PAYTableAdapter _pAYTableAdapter;
        
        private STAFFTableAdapter _sTAFFTableAdapter;
        
        private RENTALTableAdapter _rENTALTableAdapter;
        
        private RESERVATIONTableAdapter _rESERVATIONTableAdapter;
        
        private REVIEWTableAdapter _rEVIEWTableAdapter;
        
        private LATEFEETableAdapter _lATEFEETableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public HUMANTableAdapter HUMANTableAdapter {
            get {
                return this._hUMANTableAdapter;
            }
            set {
                this._hUMANTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public BLACKLISTTableAdapter BLACKLISTTableAdapter {
            get {
                return this._bLACKLISTTableAdapter;
            }
            set {
                this._bLACKLISTTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public CATEGORYTableAdapter CATEGORYTableAdapter {
            get {
                return this._cATEGORYTableAdapter;
            }
            set {
                this._cATEGORYTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public CLOTHESTableAdapter CLOTHESTableAdapter {
            get {
                return this._cLOTHESTableAdapter;
            }
            set {
                this._cLOTHESTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public CUSTOMERTableAdapter CUSTOMERTableAdapter {
            get {
                return this._cUSTOMERTableAdapter;
            }
            set {
                this._cUSTOMERTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public MANAGERTableAdapter MANAGERTableAdapter {
            get {
                return this._mANAGERTableAdapter;
            }
            set {
                this._mANAGERTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public PAYTableAdapter PAYTableAdapter {
            get {
                return this._pAYTableAdapter;
            }
            set {
                this._pAYTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public STAFFTableAdapter STAFFTableAdapter {
            get {
                return this._sTAFFTableAdapter;
            }
            set {
                this._sTAFFTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public RENTALTableAdapter RENTALTableAdapter {
            get {
                return this._rENTALTableAdapter;
            }
            set {
                this._rENTALTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public RESERVATIONTableAdapter RESERVATIONTableAdapter {
            get {
                return this._rESERVATIONTableAdapter;
            }
            set {
                this._rESERVATIONTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public REVIEWTableAdapter REVIEWTableAdapter {
            get {
                return this._rEVIEWTableAdapter;
            }
            set {
                this._rEVIEWTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public LATEFEETableAdapter LATEFEETableAdapter {
            get {
                return this._lATEFEETableAdapter;
            }
            set {
                this._lATEFEETableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._hUMANTableAdapter != null) 
                            && (this._hUMANTableAdapter.Connection != null))) {
                    return this._hUMANTableAdapter.Connection;
                }
                if (((this._bLACKLISTTableAdapter != null) 
                            && (this._bLACKLISTTableAdapter.Connection != null))) {
                    return this._bLACKLISTTableAdapter.Connection;
                }
                if (((this._cATEGORYTableAdapter != null) 
                            && (this._cATEGORYTableAdapter.Connection != null))) {
                    return this._cATEGORYTableAdapter.Connection;
                }
                if (((this._cLOTHESTableAdapter != null) 
                            && (this._cLOTHESTableAdapter.Connection != null))) {
                    return this._cLOTHESTableAdapter.Connection;
                }
                if (((this._cUSTOMERTableAdapter != null) 
                            && (this._cUSTOMERTableAdapter.Connection != null))) {
                    return this._cUSTOMERTableAdapter.Connection;
                }
                if (((this._mANAGERTableAdapter != null) 
                            && (this._mANAGERTableAdapter.Connection != null))) {
                    return this._mANAGERTableAdapter.Connection;
                }
                if (((this._pAYTableAdapter != null) 
                            && (this._pAYTableAdapter.Connection != null))) {
                    return this._pAYTableAdapter.Connection;
                }
                if (((this._sTAFFTableAdapter != null) 
                            && (this._sTAFFTableAdapter.Connection != null))) {
                    return this._sTAFFTableAdapter.Connection;
                }
                if (((this._rENTALTableAdapter != null) 
                            && (this._rENTALTableAdapter.Connection != null))) {
                    return this._rENTALTableAdapter.Connection;
                }
                if (((this._rESERVATIONTableAdapter != null) 
                            && (this._rESERVATIONTableAdapter.Connection != null))) {
                    return this._rESERVATIONTableAdapter.Connection;
                }
                if (((this._rEVIEWTableAdapter != null) 
                            && (this._rEVIEWTableAdapter.Connection != null))) {
                    return this._rEVIEWTableAdapter.Connection;
                }
                if (((this._lATEFEETableAdapter != null) 
                            && (this._lATEFEETableAdapter.Connection != null))) {
                    return this._lATEFEETableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._hUMANTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._bLACKLISTTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._cATEGORYTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._cLOTHESTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._cUSTOMERTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._mANAGERTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._pAYTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._sTAFFTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._rENTALTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._rESERVATIONTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._rEVIEWTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._lATEFEETableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(DataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._cATEGORYTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.CATEGORY.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._cATEGORYTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._pAYTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.PAY.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._pAYTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._hUMANTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.HUMAN.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._hUMANTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._cLOTHESTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.CLOTHES.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._cLOTHESTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._cUSTOMERTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.CUSTOMER.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._cUSTOMERTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._sTAFFTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.STAFF.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._sTAFFTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._rENTALTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.RENTAL.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._rENTALTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._bLACKLISTTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.BLACKLIST.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._bLACKLISTTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._mANAGERTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.MANAGER.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._mANAGERTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._rESERVATIONTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.RESERVATION.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._rESERVATIONTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._rEVIEWTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.REVIEW.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._rEVIEWTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._lATEFEETableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.LATEFEE.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._lATEFEETableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(DataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._cATEGORYTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.CATEGORY.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._cATEGORYTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._pAYTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.PAY.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._pAYTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._hUMANTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.HUMAN.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._hUMANTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._cLOTHESTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.CLOTHES.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._cLOTHESTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._cUSTOMERTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.CUSTOMER.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._cUSTOMERTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._sTAFFTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.STAFF.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._sTAFFTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._rENTALTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.RENTAL.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._rENTALTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._bLACKLISTTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.BLACKLIST.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._bLACKLISTTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._mANAGERTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.MANAGER.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._mANAGERTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._rESERVATIONTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.RESERVATION.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._rESERVATIONTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._rEVIEWTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.REVIEW.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._rEVIEWTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._lATEFEETableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.LATEFEE.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._lATEFEETableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(DataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._lATEFEETableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.LATEFEE.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._lATEFEETableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._rEVIEWTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.REVIEW.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._rEVIEWTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._rESERVATIONTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.RESERVATION.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._rESERVATIONTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._mANAGERTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.MANAGER.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._mANAGERTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._bLACKLISTTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.BLACKLIST.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._bLACKLISTTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._rENTALTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.RENTAL.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._rENTALTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._sTAFFTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.STAFF.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._sTAFFTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._cUSTOMERTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.CUSTOMER.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._cUSTOMERTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._cLOTHESTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.CLOTHES.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._cLOTHESTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._hUMANTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.HUMAN.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._hUMANTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._pAYTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.PAY.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._pAYTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._cATEGORYTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.CATEGORY.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._cATEGORYTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(DataSet1 dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._hUMANTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._hUMANTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("TableAdapterManager에서 관리하는 모든 TableAdapter에는 동일한 연결 문자열을 사용해야 합니다.");
            }
            if (((this._bLACKLISTTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._bLACKLISTTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("TableAdapterManager에서 관리하는 모든 TableAdapter에는 동일한 연결 문자열을 사용해야 합니다.");
            }
            if (((this._cATEGORYTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._cATEGORYTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("TableAdapterManager에서 관리하는 모든 TableAdapter에는 동일한 연결 문자열을 사용해야 합니다.");
            }
            if (((this._cLOTHESTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._cLOTHESTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("TableAdapterManager에서 관리하는 모든 TableAdapter에는 동일한 연결 문자열을 사용해야 합니다.");
            }
            if (((this._cUSTOMERTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._cUSTOMERTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("TableAdapterManager에서 관리하는 모든 TableAdapter에는 동일한 연결 문자열을 사용해야 합니다.");
            }
            if (((this._mANAGERTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._mANAGERTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("TableAdapterManager에서 관리하는 모든 TableAdapter에는 동일한 연결 문자열을 사용해야 합니다.");
            }
            if (((this._pAYTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._pAYTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("TableAdapterManager에서 관리하는 모든 TableAdapter에는 동일한 연결 문자열을 사용해야 합니다.");
            }
            if (((this._sTAFFTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._sTAFFTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("TableAdapterManager에서 관리하는 모든 TableAdapter에는 동일한 연결 문자열을 사용해야 합니다.");
            }
            if (((this._rENTALTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._rENTALTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("TableAdapterManager에서 관리하는 모든 TableAdapter에는 동일한 연결 문자열을 사용해야 합니다.");
            }
            if (((this._rESERVATIONTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._rESERVATIONTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("TableAdapterManager에서 관리하는 모든 TableAdapter에는 동일한 연결 문자열을 사용해야 합니다.");
            }
            if (((this._rEVIEWTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._rEVIEWTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("TableAdapterManager에서 관리하는 모든 TableAdapter에는 동일한 연결 문자열을 사용해야 합니다.");
            }
            if (((this._lATEFEETableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._lATEFEETableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("TableAdapterManager에서 관리하는 모든 TableAdapter에는 동일한 연결 문자열을 사용해야 합니다.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager에 연결 정보가 없습니다. 각 TableAdapterManager TableAdapter 속성을 올바른 Tabl" +
                        "eAdapter 인스턴스로 설정하십시오.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("트랜잭션을 시작할 수 없습니다. 현재 데이터 연결에서 트랜잭션이 지원되지 않거나 현재 상태에서 트랜잭션을 시작할 수 없습니다.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._hUMANTableAdapter != null)) {
                    revertConnections.Add(this._hUMANTableAdapter, this._hUMANTableAdapter.Connection);
                    this._hUMANTableAdapter.Connection = ((global::Oracle.DataAccess.Client.OracleConnection)(workConnection));
                    this._hUMANTableAdapter.Transaction = ((global::Oracle.DataAccess.Client.OracleTransaction)(workTransaction));
                    if (this._hUMANTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._hUMANTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._hUMANTableAdapter.Adapter);
                    }
                }
                if ((this._bLACKLISTTableAdapter != null)) {
                    revertConnections.Add(this._bLACKLISTTableAdapter, this._bLACKLISTTableAdapter.Connection);
                    this._bLACKLISTTableAdapter.Connection = ((global::Oracle.DataAccess.Client.OracleConnection)(workConnection));
                    this._bLACKLISTTableAdapter.Transaction = ((global::Oracle.DataAccess.Client.OracleTransaction)(workTransaction));
                    if (this._bLACKLISTTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._bLACKLISTTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._bLACKLISTTableAdapter.Adapter);
                    }
                }
                if ((this._cATEGORYTableAdapter != null)) {
                    revertConnections.Add(this._cATEGORYTableAdapter, this._cATEGORYTableAdapter.Connection);
                    this._cATEGORYTableAdapter.Connection = ((global::Oracle.DataAccess.Client.OracleConnection)(workConnection));
                    this._cATEGORYTableAdapter.Transaction = ((global::Oracle.DataAccess.Client.OracleTransaction)(workTransaction));
                    if (this._cATEGORYTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._cATEGORYTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._cATEGORYTableAdapter.Adapter);
                    }
                }
                if ((this._cLOTHESTableAdapter != null)) {
                    revertConnections.Add(this._cLOTHESTableAdapter, this._cLOTHESTableAdapter.Connection);
                    this._cLOTHESTableAdapter.Connection = ((global::Oracle.DataAccess.Client.OracleConnection)(workConnection));
                    this._cLOTHESTableAdapter.Transaction = ((global::Oracle.DataAccess.Client.OracleTransaction)(workTransaction));
                    if (this._cLOTHESTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._cLOTHESTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._cLOTHESTableAdapter.Adapter);
                    }
                }
                if ((this._cUSTOMERTableAdapter != null)) {
                    revertConnections.Add(this._cUSTOMERTableAdapter, this._cUSTOMERTableAdapter.Connection);
                    this._cUSTOMERTableAdapter.Connection = ((global::Oracle.DataAccess.Client.OracleConnection)(workConnection));
                    this._cUSTOMERTableAdapter.Transaction = ((global::Oracle.DataAccess.Client.OracleTransaction)(workTransaction));
                    if (this._cUSTOMERTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._cUSTOMERTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._cUSTOMERTableAdapter.Adapter);
                    }
                }
                if ((this._mANAGERTableAdapter != null)) {
                    revertConnections.Add(this._mANAGERTableAdapter, this._mANAGERTableAdapter.Connection);
                    this._mANAGERTableAdapter.Connection = ((global::Oracle.DataAccess.Client.OracleConnection)(workConnection));
                    this._mANAGERTableAdapter.Transaction = ((global::Oracle.DataAccess.Client.OracleTransaction)(workTransaction));
                    if (this._mANAGERTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._mANAGERTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._mANAGERTableAdapter.Adapter);
                    }
                }
                if ((this._pAYTableAdapter != null)) {
                    revertConnections.Add(this._pAYTableAdapter, this._pAYTableAdapter.Connection);
                    this._pAYTableAdapter.Connection = ((global::Oracle.DataAccess.Client.OracleConnection)(workConnection));
                    this._pAYTableAdapter.Transaction = ((global::Oracle.DataAccess.Client.OracleTransaction)(workTransaction));
                    if (this._pAYTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._pAYTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._pAYTableAdapter.Adapter);
                    }
                }
                if ((this._sTAFFTableAdapter != null)) {
                    revertConnections.Add(this._sTAFFTableAdapter, this._sTAFFTableAdapter.Connection);
                    this._sTAFFTableAdapter.Connection = ((global::Oracle.DataAccess.Client.OracleConnection)(workConnection));
                    this._sTAFFTableAdapter.Transaction = ((global::Oracle.DataAccess.Client.OracleTransaction)(workTransaction));
                    if (this._sTAFFTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._sTAFFTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._sTAFFTableAdapter.Adapter);
                    }
                }
                if ((this._rENTALTableAdapter != null)) {
                    revertConnections.Add(this._rENTALTableAdapter, this._rENTALTableAdapter.Connection);
                    this._rENTALTableAdapter.Connection = ((global::Oracle.DataAccess.Client.OracleConnection)(workConnection));
                    this._rENTALTableAdapter.Transaction = ((global::Oracle.DataAccess.Client.OracleTransaction)(workTransaction));
                    if (this._rENTALTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._rENTALTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._rENTALTableAdapter.Adapter);
                    }
                }
                if ((this._rESERVATIONTableAdapter != null)) {
                    revertConnections.Add(this._rESERVATIONTableAdapter, this._rESERVATIONTableAdapter.Connection);
                    this._rESERVATIONTableAdapter.Connection = ((global::Oracle.DataAccess.Client.OracleConnection)(workConnection));
                    this._rESERVATIONTableAdapter.Transaction = ((global::Oracle.DataAccess.Client.OracleTransaction)(workTransaction));
                    if (this._rESERVATIONTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._rESERVATIONTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._rESERVATIONTableAdapter.Adapter);
                    }
                }
                if ((this._rEVIEWTableAdapter != null)) {
                    revertConnections.Add(this._rEVIEWTableAdapter, this._rEVIEWTableAdapter.Connection);
                    this._rEVIEWTableAdapter.Connection = ((global::Oracle.DataAccess.Client.OracleConnection)(workConnection));
                    this._rEVIEWTableAdapter.Transaction = ((global::Oracle.DataAccess.Client.OracleTransaction)(workTransaction));
                    if (this._rEVIEWTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._rEVIEWTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._rEVIEWTableAdapter.Adapter);
                    }
                }
                if ((this._lATEFEETableAdapter != null)) {
                    revertConnections.Add(this._lATEFEETableAdapter, this._lATEFEETableAdapter.Connection);
                    this._lATEFEETableAdapter.Connection = ((global::Oracle.DataAccess.Client.OracleConnection)(workConnection));
                    this._lATEFEETableAdapter.Transaction = ((global::Oracle.DataAccess.Client.OracleTransaction)(workTransaction));
                    if (this._lATEFEETableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._lATEFEETableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._lATEFEETableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._hUMANTableAdapter != null)) {
                    this._hUMANTableAdapter.Connection = ((global::Oracle.DataAccess.Client.OracleConnection)(revertConnections[this._hUMANTableAdapter]));
                    this._hUMANTableAdapter.Transaction = null;
                }
                if ((this._bLACKLISTTableAdapter != null)) {
                    this._bLACKLISTTableAdapter.Connection = ((global::Oracle.DataAccess.Client.OracleConnection)(revertConnections[this._bLACKLISTTableAdapter]));
                    this._bLACKLISTTableAdapter.Transaction = null;
                }
                if ((this._cATEGORYTableAdapter != null)) {
                    this._cATEGORYTableAdapter.Connection = ((global::Oracle.DataAccess.Client.OracleConnection)(revertConnections[this._cATEGORYTableAdapter]));
                    this._cATEGORYTableAdapter.Transaction = null;
                }
                if ((this._cLOTHESTableAdapter != null)) {
                    this._cLOTHESTableAdapter.Connection = ((global::Oracle.DataAccess.Client.OracleConnection)(revertConnections[this._cLOTHESTableAdapter]));
                    this._cLOTHESTableAdapter.Transaction = null;
                }
                if ((this._cUSTOMERTableAdapter != null)) {
                    this._cUSTOMERTableAdapter.Connection = ((global::Oracle.DataAccess.Client.OracleConnection)(revertConnections[this._cUSTOMERTableAdapter]));
                    this._cUSTOMERTableAdapter.Transaction = null;
                }
                if ((this._mANAGERTableAdapter != null)) {
                    this._mANAGERTableAdapter.Connection = ((global::Oracle.DataAccess.Client.OracleConnection)(revertConnections[this._mANAGERTableAdapter]));
                    this._mANAGERTableAdapter.Transaction = null;
                }
                if ((this._pAYTableAdapter != null)) {
                    this._pAYTableAdapter.Connection = ((global::Oracle.DataAccess.Client.OracleConnection)(revertConnections[this._pAYTableAdapter]));
                    this._pAYTableAdapter.Transaction = null;
                }
                if ((this._sTAFFTableAdapter != null)) {
                    this._sTAFFTableAdapter.Connection = ((global::Oracle.DataAccess.Client.OracleConnection)(revertConnections[this._sTAFFTableAdapter]));
                    this._sTAFFTableAdapter.Transaction = null;
                }
                if ((this._rENTALTableAdapter != null)) {
                    this._rENTALTableAdapter.Connection = ((global::Oracle.DataAccess.Client.OracleConnection)(revertConnections[this._rENTALTableAdapter]));
                    this._rENTALTableAdapter.Transaction = null;
                }
                if ((this._rESERVATIONTableAdapter != null)) {
                    this._rESERVATIONTableAdapter.Connection = ((global::Oracle.DataAccess.Client.OracleConnection)(revertConnections[this._rESERVATIONTableAdapter]));
                    this._rESERVATIONTableAdapter.Transaction = null;
                }
                if ((this._rEVIEWTableAdapter != null)) {
                    this._rEVIEWTableAdapter.Connection = ((global::Oracle.DataAccess.Client.OracleConnection)(revertConnections[this._rEVIEWTableAdapter]));
                    this._rEVIEWTableAdapter.Transaction = null;
                }
                if ((this._lATEFEETableAdapter != null)) {
                    this._lATEFEETableAdapter.Connection = ((global::Oracle.DataAccess.Client.OracleConnection)(revertConnections[this._lATEFEETableAdapter]));
                    this._lATEFEETableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591